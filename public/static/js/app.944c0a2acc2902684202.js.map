{"version":3,"sources":["webpack:///./src/util/range.js","webpack:///./src/components/NavHeader.vue?00af","webpack:///./src/components/NavHeader.vue","webpack:///src/App.vue","webpack:///src/components/NavHeader.vue","webpack:///./src/App.vue?f186","webpack:///./src/App.vue","webpack:///./src/components/Welcome.vue?8f08","webpack:///./src/components/Welcome.vue","webpack:///src/components/Welcome.vue","webpack:///./src/components/RangeSlider.vue?dc5a","webpack:///./src/components/RangeSlider.vue","webpack:///src/components/RangeSlider.vue","webpack:///./src/components/Triblets.vue?9519","webpack:///./src/components/Triblets.vue","webpack:///src/components/Triblets.vue","webpack:///src/components/Classifier.vue","webpack:///./src/components/Classifier.vue?852a","webpack:///./src/components/Classifier.vue","webpack:///./src/icons/Scissors.vue?3238","webpack:///./src/icons/Scissors.vue","webpack:///src/icons/Scissors.vue","webpack:///src/components/TsneMap.vue","webpack:///./src/components/TsneMap.vue?fc2a","webpack:///./src/components/TsneMap.vue","webpack:///src/components/Coins.vue","webpack:///./src/components/Coins.vue?a525","webpack:///./src/components/Coins.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["module","exports","ids","coords","minX","minY","maxX","maxY","nodeSize","stack","length","result","x","y","axis","pop","right","left","i","push","m","Math","floor","nextAxis","components_NavHeader","render","_h","this","$createElement","_c","_self","attrs","id","to","_v","staticRenderFns","App","NavHeader","__webpack_require__","normalizeComponent","ssrContext","selectortype_template_index_0_src_App","src_App","App_normalizeComponent","components_Welcome","src_components_Welcome","Welcome_normalizeComponent","components_RangeSlider","type","min","max","step","domProps","value","src_components_RangeSlider","RangeSlider_normalizeComponent","components_Triblets","_vm","staticClass","node","class","redActive","on","click","toogleRed","_l","n","key","src","icon","alt","$event","removeNegativ","_e","greenActive","toogleBlue","removePositiv","src_components_Triblets","Triblets_normalizeComponent","Classifier","nodes","_this","label","_this2","components_Classifier","removeNode","directives","name","rawName","expression","focus","handleFocus","blur","handleBlur","input","target","composing","chooseLabel","_s","addLabel","src_components_Classifier","Classifier_normalizeComponent","icons_Scissors","active","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","clickHandler","cx","cy","r","x1","y1","x2","y2","src_icons_Scissors","Scissors_normalizeComponent","TsneMap_Node","classCallCheck_default","Node","links","index","colorKey","color","ctx","hitCtx","cluster","positives","negatives","labels","Image","buffer","scale2","h","scale","_x","_y","s","isActive","activeImgWidth","isActiveNeighbour","imgWidth","lineWidth","_width","activeScale","w","_height","_value","v","_isActive","TsneMap_CanvasState","clear","draw","imgScale","borderWidth","labelColor","preventDefault","stopPropagation","offsetY","offsetX","scrollRatio","scrollImgRatio","clusterRatio","oldScale","scaleChange","shiftKey","ctrlKey","altKey","classify","nodeUnderMouse","startX","startY","mouseX","mouseY","moveX","moveY","nodeY","triggerDraw","removeSelection","activeNode","socket","ui","canvas","hitCanvas","top","handleMouseDown","handleMouseMove","handleMouseUp","handleDoubleClick","zoom","resetTransform","translateY","data","nodeId","_ref3","slicedToArray_default","_ref2","strength","_this3","selection","_scale","_scale2","_imgScale","_activeImgScale","_borderWidth","_cluster","_scrollRatio","_scrollImgRatio","_clusterRatio","_valid","TsneMap","Scissors","RangeSlider","Triblets","getNodes","resetStore","showOptions","showKLabels","selectedLabel","scissors","imageScale","_this4","parantWidth","updateSelection","updateScale","updateScale2","addNodeToClassify","activeImgScale","store","nodesCount","kdtree","disconnect","timerId","components_TsneMap","selectScissors","connectedToSocket","style","toogleLabel","toggleShowKLabels","toggleClassify","toggleShowOptions","sendData","ref","tabindex","roang","changeCluster","changeImgWidth","activeImgWidthLess","activeImgWidthMore","borderWidthLess","borderWidthMore","changeScrollRatio","changeScrollImgRatio","changeClusterRatio","classifyNodes","image","selectedNodeNeighboursCount","src_components_TsneMap","TsneMap_normalizeComponent","Coins","fetchData","then","resp","catch","err","components_Coins","coin","symbol","price_usd","src_components_Coins","Coins_normalizeComponent","vue_esm","use","vue_router_esm","router","routes","path","component","config","productionTip","el","components","template"],"mappings":"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","file":"static/js/app.944c0a2acc2902684202.js","sourcesContent":["\r\n// https://github.com/mourner/kdbush/tree/master/src\r\n\r\nfunction range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\r\n    const stack = [0, ids.length - 1, 0];\r\n    const result = [];\r\n    let x;\r\n    let y;\r\n\r\n    while (stack.length) {\r\n        const axis = stack.pop();\r\n        const right = stack.pop();\r\n        const left = stack.pop();\r\n\r\n        if (right - left <= nodeSize) {\r\n            for (let i = left; i <= right; i++) {\r\n                x = coords[2 * i];\r\n                y = coords[(2 * i) + 1];\r\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\r\n            }\r\n            continue;\r\n        }\r\n\r\n        const m = Math.floor((left + right) / 2);\r\n\r\n        x = coords[2 * m];\r\n        y = coords[(2 * m) + 1];\r\n\r\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\r\n\r\n        const nextAxis = (axis + 1) % 2;\r\n\r\n        if (axis === 0 ? minX <= x : minY <= y) {\r\n            stack.push(left);\r\n            stack.push(m - 1);\r\n            stack.push(nextAxis);\r\n        }\r\n        if (axis === 0 ? maxX >= x : maxY >= y) {\r\n            stack.push(m + 1);\r\n            stack.push(right);\r\n            stack.push(nextAxis);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = range;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/range.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"header\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"Home\")]),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":\"/TsneMap\"}},[_vm._v(\"TsneMap\")]),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":\"/about\"}},[_vm._v(\"About\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-fa67de2e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/NavHeader.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fa67de2e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./NavHeader.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavHeader.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavHeader.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fa67de2e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./NavHeader.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-fa67de2e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/NavHeader.vue\n// module id = null\n// module chunks = ","\r\n<template>\r\n    <div id=\"app\">\r\n        <NavHeader > </NavHEader>\r\n\r\n        <router-view/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport NavHeader from './components/NavHeader';\r\n\r\nexport default {\r\n    name: 'App',\r\n    components: { NavHeader },\r\n};\r\n</script>\r\n\r\n<style>\r\n    body {\r\n        margin: 0 !important;\r\n    }\r\n\r\n    input {\r\n        outline: none;\r\n        background-color: transparent !important;\r\n        border: 0 solid;\r\n        border-bottom: 1px solid rgba(0,0,0,0.25);\r\n        font: inherit;\r\n    }\r\n\r\n    #app {\r\n        font-family: Camphor, Open Sans, Segoe UI, sans-serif;\r\n        text-rendering: optimizeLegibility;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        color: #2c3e50;\r\n        margin: 0;\r\n    }\r\n\r\n    .button {\r\n        margin: 10px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 14px;\r\n        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);\r\n        background: #fff;\r\n        color: #6772e5;\r\n        border-radius: 4px;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        letter-spacing: .025em;\r\n        transition: all .15s ease;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .btn {\r\n        align-self: center;\r\n        text-decoration: none;\r\n        margin: 0.5rem;\r\n        height: 20px;\r\n        line-height: 20px;\r\n        padding: 0 14px;\r\n        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);\r\n        background: #fff;\r\n        color: #6772e5;\r\n        border-radius: 4px;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        letter-spacing: .025em;\r\n        transition: all .15s ease;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .btn.active {\r\n        color: #fff;\r\n        background: #6772e5;\r\n    }\r\n\r\n    .btn:hover {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\r\n    }\r\n\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\r\n    <div id=\"header\">\r\n        <router-link to=\"/\">Home</router-link>\r\n        <router-link to=\"/TsneMap\">TsneMap</router-link>\r\n        <router-link to=\"/about\">About</router-link>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'NavHeader',\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    #header {\r\n        display: flex;\r\n        align-items: center;\r\n        /*height: 50px;*/\r\n        box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\r\n    }\r\n\r\n    /*a {\r\n        text-decoration: none;\r\n        margin: 10px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 14px;\r\n        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);\r\n        background: #fff;\r\n        color: #6772e5;\r\n        border-radius: 4px;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        letter-spacing: .025em;\r\n        transition: all .15s ease;\r\n        cursor: pointer;\r\n    }\r\n\r\n    a:hover {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\r\n    }\r\n*/\r\n    a {\r\n        text-decoration: none;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        height: 40px;\r\n\r\n        font-weight: bold;\r\n        padding: 0 1em;\r\n        margin-bottom: 5px;\r\n        color: #767676;\r\n    }\r\n\r\n    a:hover {\r\n         color: #484848;\r\n     }\r\n\r\n    .router-link-exact-active {\r\n         /*//background-color: paleturquoise;*/\r\n         border-bottom: 5px solid paleturquoise;\r\n         color: #484848;\r\n         margin-bottom: 0;\r\n     }\r\n    /*.router-link-active {\r\n        color: #fff;\r\n        background: #6772e5;\r\n    }\r\n    .router-link-active:hover {\r\n        color: #fff;\r\n        background-color: #7795f8;\r\n    }*/\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/NavHeader.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('NavHeader'),_vm._v(\" \"),_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ce23810e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ce23810e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ce23810e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"Hallo Welt\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1c0dc6b8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Welcome.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1c0dc6b8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Welcome.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Welcome.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Welcome.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1c0dc6b8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Welcome.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1c0dc6b8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Welcome.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div>Hallo Welt</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Welcome',\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Welcome.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('input',{attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"800\",\"step\":\"10\"},domProps:{\"value\":_vm.value}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-58e23a42\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/RangeSlider.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-58e23a42\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./RangeSlider.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./RangeSlider.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./RangeSlider.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-58e23a42\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./RangeSlider.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-58e23a42\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/RangeSlider.vue\n// module id = null\n// module chunks = ","<template>\r\n    <input type=\"range\" min=\"0\" max=\"800\" step=\"10\" :value=\"value\"/>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'range-slider',\r\n\r\n    props: ['value', 'change', 'input', 'slide'],\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    input[type=range] {\r\n        -webkit-appearance: none;\r\n        width: 100%;\r\n        margin: 6.05px 0;\r\n    }\r\n    input[type=range]:focus {\r\n        outline: none;\r\n    }\r\n    input[type=range]::-webkit-slider-runnable-track {\r\n        width: 100%;\r\n        height: 10.9px;\r\n        cursor: pointer;\r\n        box-shadow: 1.5px 1.5px 5px rgba(104, 114, 229, 0.5), 0px 0px 1.5px rgba(126, 134, 233, 0.5);\r\n        background: #ffffff;\r\n        border-radius: 25px;\r\n        border: 0.6px solid #6772e5;\r\n    }\r\n    input[type=range]::-webkit-slider-thumb {\r\n        box-shadow: 0px 0px 12.3px rgba(103, 114, 229, 0.48), 0px 0px 0px rgba(125, 134, 233, 0.48);\r\n        border: 2.5px solid #ffffff;\r\n        height: 23px;\r\n        width: 23px;\r\n        border-radius: 12px;\r\n        background: #6772e5;\r\n        cursor: pointer;\r\n        -webkit-appearance: none;\r\n        margin-top: -6.65px;\r\n    }\r\n    input[type=range]:focus::-webkit-slider-runnable-track {\r\n        background: #ffffff;\r\n    }\r\n    input[type=range]::-moz-range-track {\r\n        width: 100%;\r\n        height: 10.9px;\r\n        cursor: pointer;\r\n        box-shadow: 1.5px 1.5px 5px rgba(104, 114, 229, 0.5), 0px 0px 1.5px rgba(126, 134, 233, 0.5);\r\n        background: #ffffff;\r\n        border-radius: 25px;\r\n        border: 0.6px solid #6772e5;\r\n    }\r\n    input[type=range]::-moz-range-thumb {\r\n        box-shadow: 0px 0px 12.3px rgba(103, 114, 229, 0.48), 0px 0px 0px rgba(125, 134, 233, 0.48);\r\n        border: 2.5px solid #ffffff;\r\n        height: 23px;\r\n        width: 23px;\r\n        border-radius: 12px;\r\n        background: #6772e5;\r\n        cursor: pointer;\r\n    }\r\n    input[type=range]::-ms-track {\r\n        width: 100%;\r\n        height: 10.9px;\r\n        cursor: pointer;\r\n        background: transparent;\r\n        border-color: transparent;\r\n        color: transparent;\r\n    }\r\n    input[type=range]::-ms-fill-lower {\r\n        background: #f0f0f0;\r\n        border: 0.6px solid #6772e5;\r\n        border-radius: 50px;\r\n        box-shadow: 1.5px 1.5px 5px rgba(104, 114, 229, 0.5), 0px 0px 1.5px rgba(126, 134, 233, 0.5);\r\n    }\r\n    input[type=range]::-ms-fill-upper {\r\n        background: #ffffff;\r\n        border: 0.6px solid #6772e5;\r\n        border-radius: 50px;\r\n        box-shadow: 1.5px 1.5px 5px rgba(104, 114, 229, 0.5), 0px 0px 1.5px rgba(126, 134, 233, 0.5);\r\n    }\r\n    input[type=range]::-ms-thumb {\r\n        box-shadow: 0px 0px 12.3px rgba(103, 114, 229, 0.48), 0px 0px 0px rgba(125, 134, 233, 0.48);\r\n        border: 2.5px solid #ffffff;\r\n        height: 23px;\r\n        width: 23px;\r\n        border-radius: 12px;\r\n        background: #6772e5;\r\n        cursor: pointer;\r\n        height: 10.9px;\r\n    }\r\n    input[type=range]:focus::-ms-fill-lower {\r\n        background: #ffffff;\r\n    }\r\n    input[type=range]:focus::-ms-fill-upper {\r\n        background: #ffffff;\r\n    }\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/RangeSlider.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"triblet-area\"},[(_vm.node.negatives)?_c('div',{staticClass:\"negatives area\",class:{redActive: _vm.redActive},on:{\"click\":_vm.toogleRed}},[(_vm.node.negatives)?_vm._l((_vm.node.negatives),function(n,i){return _c('div',{staticClass:\"image\"},[_c('img',{key:i,attrs:{\"src\":n.icon.src,\"alt\":\"\"},on:{\"click\":function($event){_vm.removeNegativ(i)}}})])}):_vm._e()],2):_vm._e(),_vm._v(\" \"),(_vm.node.icon)?_c('div',{staticClass:\"node\"},[(_vm.node.icon)?[_c('img',{attrs:{\"src\":_vm.node.icon.src,\"alt\":\"\"}})]:_vm._e()],2):_vm._e(),_vm._v(\" \"),(_vm.node.positives)?_c('div',{staticClass:\"positives area\",class:{greenActive: _vm.greenActive},on:{\"click\":_vm.toogleBlue}},[(_vm.node.positives)?_vm._l((_vm.node.positives),function(n,i){return _c('div',{staticClass:\"image\"},[_c('img',{key:i,attrs:{\"src\":n.icon.src,\"alt\":\"\"},on:{\"click\":function($event){_vm.removePositiv(i)}}})])}):_vm._e()],2):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-781f0e3e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Triblets.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-781f0e3e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Triblets.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Triblets.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Triblets.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-781f0e3e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Triblets.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-781f0e3e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Triblets.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"triblet-area\">\r\n\r\n        <div v-if=\"node.negatives\" class=\"negatives area\" :class=\"{redActive}\" @click=\"toogleRed\">\r\n            <template v-if=\"node.negatives\">\r\n                <div class=\"image\" v-for=\"(n, i) in node.negatives\">\r\n                    <img\r\n                        :key=\"i\"\r\n                        :src=\"n.icon.src\"\r\n                        alt=\"\"\r\n                        @click=\"removeNegativ(i)\"\r\n                    >\r\n                </div>\r\n            </template>\r\n        </div>\r\n        <div v-if=\"node.icon\" class=\"node\">\r\n            <template v-if=\"node.icon\">\r\n                <img :src=\"node.icon.src\" alt=\"\">\r\n            </template>\r\n        </div>\r\n\r\n        <div v-if=\"node.positives\" class=\"positives area\" :class=\"{greenActive}\" @click=\"toogleBlue\">\r\n            <template v-if=\"node.positives\">\r\n                <div class=\"image\" v-for=\"(n, i) in node.positives\">\r\n                    <img\r\n                        :key=\"i\"\r\n                        :src=\"n.icon.src\"\r\n                        alt=\"\"\r\n                        @click=\"removePositiv(i)\"\r\n                    >\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n/*\r\n    user clicks on area and can then add items\r\n    TODO: if the user click somewhere else toogle all to false\r\n    TODO: delete selection in trible\r\n    TODO: sizing images in triple\r\n\r\n\r\n */\r\n\r\nexport default {\r\n    name: 'triblets',\r\n    props: ['node', 'positives', 'negatives'],\r\n    data: () => ({\r\n        redActive: false,\r\n        greenActive: false,\r\n    }),\r\n    methods: {\r\n        toogleRed() {\r\n            if (!this.redActive && this.greenActive) this.greenActive = false;\r\n            this.redActive = !this.redActive;\r\n        },\r\n        toogleBlue() {\r\n            if (!this.greenActive && this.redActive) this.redActive = false;\r\n            this.greenActive = !this.greenActive;\r\n        },\r\n        removePositiv(i) {\r\n            this.node.positives.splice(i, 1);\r\n        },\r\n        removeNegativ(i) {\r\n            this.node.negatives.splice(i, 1);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .triblet-area{\r\n        /*width: 100%;*/\r\n        height: 10rem;\r\n\r\n        display: flex;\r\n        background-color: white;\r\n\r\n        padding: 5px;\r\n    }\r\n\r\n    .node {\r\n        /*width: 5rem;*/\r\n        margin: 0 5px;\r\n        flex: 1;\r\n\r\n        border: 1px solid rgba(146, 144, 142, 0.5);\r\n        border-radius: 15px;\r\n        background-color: rgba(91, 88, 82, 0.1);\r\n    }\r\n\r\n    img {\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        object-fit: scale-down;\r\n    }\r\n\r\n    .redActive, .greenActive {\r\n        //border-width: 3px !important;\r\n        //margin: 0 !important;\r\n    }\r\n    .area {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-flow: wrap;\r\n        flex-direction: row;\r\n        flex: 5;\r\n        /*margin: 2px;*/\r\n    }\r\n\r\n    .positives {\r\n        border: 1px solid rgba(0, 255, 10, 0.5);\r\n        border-radius: 15px;\r\n        background-color: rgba(0, 255, 10, 0.1);\r\n    }\r\n\r\n    .negatives {\r\n        border: 1px solid rgba(255, 59, 20, 0.5);\r\n        border-radius: 15px;\r\n        background-color: rgba(255, 59, 20, 0.1);\r\n    }\r\n\r\n    .image {\r\n        width: 4rem;\r\n        height: 4rem;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-content: center;\r\n        /*border: 1px solid red;*/\r\n\r\n        padding: 0.1rem;\r\n    }\r\n\r\n    .image :hover {\r\n        /*//width: 7rem;*/\r\n    }\r\n\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Triblets.vue","<template>\r\n    <div class=\"classifier\">\r\n        <div class=\"imgArea\">\r\n            <div class=\"image\" v-for=\"(n, i) in nodes\">\r\n                <img\r\n                    :key=\"i\"\r\n                    :src=\"n.icon.src\"\r\n                    alt=\"\"\r\n                    @click=\"removeNode(i)\"\r\n                >\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <input type=\"text\" v-model=\"label\" @focus=\"handleFocus\" @blur=\"handleBlur\"/>\r\n            <div v-if=\"showLabels\" class=\"dropdown\" >\r\n                <div class=\"item\" v-for=\"label in labelsFiltered\" :key=\"label\" @click=\"chooseLabel(label)\">{{label}}</div>\r\n            </div>\r\n            <div @click=\"addLabel\" class=\"btn\">add label</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'classifier',\r\n    props: ['nodes', 'labels'],\r\n    data: () => ({\r\n        label: '',\r\n        showLabels: false\r\n    }),\r\n    methods: {\r\n        removeNode(i) {\r\n            console.log(`remove node ${i} clicked`);\r\n            console.log(this.nodes);\r\n            this.nodes.splice(i, 1);\r\n        },\r\n        addLabel({target}) {\r\n            console.log('addLabel clicked');\r\n            console.log(this.label)\r\n\r\n            // check if label is in list of labels allready?\r\n            if(this.labels.indexOf(this.label) === -1) this.labels.push(this.label)\r\n\r\n            // ad label to nodes after checking that is npot allready used at node\r\n            this.nodes.forEach(node => {\r\n                if(node.labels.indexOf(this.label) === -1 ) node.labels.push(this.label)\r\n            })\r\n\r\n            // reset input/label\r\n            this.label = '';\r\n\r\n\r\n            // TODO add label to choosen pictures if they not have this label allready\r\n            // TODO add label to a global list of labels witch will be generated while reciving nodes from backend\r\n            this.showLabels = false\r\n        },\r\n        handleFocus(e) {\r\n            console.log(\"input focus\")\r\n            this.showLabels = true\r\n        },\r\n        handleBlur(e) {\r\n            console.log(\"input blur\")\r\n            //this.focus = false\r\n        },\r\n        chooseLabel(label) {\r\n            this.label = label\r\n            this.showLabels = false\r\n        },\r\n    },\r\n    computed: {\r\n        labelsFiltered: function() {\r\n            return this.labels.filter(label => label.includes(this.label))\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    .classifier {\r\n        width: 100%;\r\n        /*height: 5rem;*/\r\n\r\n        /*border: 1px solid red;*/\r\n\r\n    }\r\n\r\n    .row {\r\n        display: flex;\r\n        position: relative;\r\n    }\r\n\r\n    .imgArea {\r\n        /*height: 10rem;*/\r\n        /*border: 1px solid rgba(0, 255, 10, 0.5);*/\r\n        /*border-radius: 15px;*/\r\n        /*background-color: rgba(0, 255, 10, 0.1);*/\r\n        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\r\n        display: flex;\r\n        /*justify-content: center;*/\r\n        align-items: center;\r\n        flex-flow: wrap;\r\n        flex-direction: row;\r\n    }\r\n\r\n    img {\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        object-fit: scale-down;\r\n    }\r\n\r\n    .image {\r\n        width: 4rem;\r\n        height: 4rem;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-content: center;\r\n        /*border: 1px solid red;*/\r\n\r\n        padding: 0.1rem;\r\n    }\r\n\r\n    .dropdown {\r\n        display: block;\r\n        position: absolute;\r\n        left: 0;\r\n        width: auto;\r\n\r\n        background-color: #fff;\r\n        border: 1px solid #c6c6c6;\r\n        border-radius: 3px;\r\n\r\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n        top: 100%;\r\n        z-index: 1;\r\n    }\r\n\r\n    .item {\r\n        padding: 3px;\r\n    }\r\n\r\n    .item:hover {\r\n        background-color: #5cb9ff;\r\n    }\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Classifier.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"classifier\"},[_c('div',{staticClass:\"imgArea\"},_vm._l((_vm.nodes),function(n,i){return _c('div',{staticClass:\"image\"},[_c('img',{key:i,attrs:{\"src\":n.icon.src,\"alt\":\"\"},on:{\"click\":function($event){_vm.removeNode(i)}}})])})),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.label),expression:\"label\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.label)},on:{\"focus\":_vm.handleFocus,\"blur\":_vm.handleBlur,\"input\":function($event){if($event.target.composing){ return; }_vm.label=$event.target.value}}}),_vm._v(\" \"),(_vm.showLabels)?_c('div',{staticClass:\"dropdown\"},_vm._l((_vm.labelsFiltered),function(label){return _c('div',{key:label,staticClass:\"item\",on:{\"click\":function($event){_vm.chooseLabel(label)}}},[_vm._v(_vm._s(label))])})):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":_vm.addLabel}},[_vm._v(\"add label\")])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7c16199c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Classifier.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7c16199c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Classifier.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Classifier.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Classifier.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7c16199c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Classifier.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7c16199c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Classifier.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{staticClass:\"scissors\",class:{ active: _vm.active },attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"stroke-width\":\"2\",\"stroke-linecap\":\"round\",\"stroke-linejoin\":\"round\"},on:{\"click\":_vm.clickHandler}},[_c('circle',{attrs:{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"}}),_vm._v(\" \"),_c('circle',{attrs:{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"}}),_vm._v(\" \"),_c('line',{attrs:{\"x1\":\"20\",\"y1\":\"4\",\"x2\":\"8.12\",\"y2\":\"15.88\"}}),_vm._v(\" \"),_c('line',{attrs:{\"x1\":\"14.47\",\"y1\":\"14.48\",\"x2\":\"20\",\"y2\":\"20\"}}),_vm._v(\" \"),_c('line',{attrs:{\"x1\":\"8.12\",\"y1\":\"8.12\",\"x2\":\"12\",\"y2\":\"12\"}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7a755806\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/icons/Scissors.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7a755806\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Scissors.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scissors.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Scissors.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7a755806\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Scissors.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7a755806\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/icons/Scissors.vue\n// module id = null\n// module chunks = ","<template>\n    <svg\n        @click=\"clickHandler\"\n        :class=\"{ active }\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"scissors\"\n    >\n        <circle cx=\"6\" cy=\"6\" r=\"3\"></circle>\n        <circle cx=\"6\" cy=\"18\" r=\"3\"></circle>\n        <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\"></line>\n        <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\"></line>\n        <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\"></line>\n    </svg>\n</template>\n\n<script>\nexport default {\n    name: 'Scissors',\n    props: ['clickHandler', 'active'],\n};\n</script>\n\n<style scoped>\n    .scissors:hover{\n        border: 1px solid grey;\n    }\n    .scissors.active{\n        border: 1px solid grey;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/icons/Scissors.vue","<template>\n    <div class=\"body\">\n        <div class=\"sub-header\">\n            <div class=\"tool-box row\">\n                <div v-if=\"loadingNodes\" class=\"loader\" ></div>\n                <scissors :active=\"scissors\" :clickHandler=\"selectScissors\">a</scissors>\n            </div>\n\n            <div>\n                <div class=\"row\">\n                    <div># {{nodesCount}}</div>\n                    <div>connected: {{connectedToSocket}}</div>\n                    <!--<div @click=\"scaleUp\" class=\"btn\">+</div>\n                    <div @click=\"scaleDown\" class=\"btn\">-</div>-->\n                </div>\n            </div>\n            <div class=\"row\">\n                <div\n                    v-for=\"(value, i) in labels\"\n                    class=\"btn\"\n                    :class=\"{ active: selectedLabel === value }\"\n                    :key=\"i\"\n                    @click=\"toogleLabel(value)\"\n                    v-bind:style=\"{'color': value}\"\n                >\n                    {{ value }}\n                </div>\n                <div\n                    class=\"btn\"\n                    :class=\"{ active: showKLabels }\"\n                    @click=\"toggleShowKLabels\"\n                >\n                    K-Label\n                </div>\n            </div>\n            <div class=\"row\">\n                <div @click=\"toggleClassify\" class=\"btn\" :class=\"{ active: classify }\">Classification</div>\n                <div @click=\"toggleShowOptions\" class=\"btn\" :class=\"{ active: showOptions }\">Options</div>\n                <div @click=\"sendData\" class=\"btn\" >Update Data</div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <canvas  ref=\"canvas\" id=\"canvas\" tabindex=\"0\" :class=\"{classify}\"></canvas>\n            <div class=\"details\">\n                <div v-if=\"showOptions\" class=\"options info-box\">\n                    <div class=\"row-btn\">\n                        <div>Cluster: {{Math.roang(cluster)}}</div>\n                        <div class=\"row\">\n                            <div @click=\"changeCluster(-100)\" class=\"btn\">-100</div>\n                            <div @click=\"changeCluster(-1000)\" class=\"btn\">-1000</div>\n                            <div @click=\"changeCluster(100)\" class=\"btn\">+100</div>\n                            <div @click=\"changeCluster(1000)\" class=\"btn\">+1000</div>\n                        </div>\n                    </div>\n                    <div class=\"row-btn\">\n                        <div>ImageWidth: {{imgWidth}}</div>\n                        <div class=\"row\">\n                            <div @click=\"changeImgWidth(-2)\" class=\"btn\">-2</div>\n                            <div @click=\"changeImgWidth(2)\" class=\"btn\">+2</div>\n                        </div>\n                    </div>\n                    <div class=\"row-btn\">\n                        <div>ImageWidth(active): {{activeImgWidth}}</div>\n                        <div class=\"row\">\n                            <div @click=\"activeImgWidthLess\" class=\"btn\">-1</div>\n                            <div @click=\"activeImgWidthMore\" class=\"btn\">+1</div>\n                        </div>\n                    </div>\n                    <div class=\"row-btn\">\n                        <div>BorderWidth: {{borderWidth}}</div>\n                        <div class=\"row\">\n                            <div @click=\"borderWidthLess\" class=\"btn\">-1</div>\n                            <div @click=\"borderWidthMore\" class=\"btn\">+1</div>\n                        </div>\n                    </div>\n                    <div class=\"row-btn\">\n                        <div>ScrollRatio: {{scrollRatio}}</div>\n                        <div class=\"row\">\n                            <div @click=\"changeScrollRatio(-0.01)\" class=\"btn\">-0.1</div>\n                            <div @click=\"changeScrollRatio(0.01)\" class=\"btn\">+0.1</div>\n                        </div>\n                    </div>\n                    <div class=\"row-btn\">\n                        <div>ScrollImgRatio: {{scrollImgRatio}}</div>\n                        <div class=\"row\">\n                            <div @click=\"changeScrollImgRatio(-0.01)\" class=\"btn\">-0.1</div>\n                            <div @click=\"changeScrollImgRatio(0.01)\" class=\"btn\">+0.1</div>\n                        </div>\n                    </div>\n                    <div class=\"row-btn\">\n                        <div>ClusterRatio: {{clusterRatio}}</div>\n                        <div class=\"row\">\n                            <div @click=\"changeClusterRatio(-0.01)\" class=\"btn\">-0.1</div>\n                            <div @click=\"changeClusterRatio(0.01)\" class=\"btn\">+0.1</div>\n                        </div>\n                    </div>\n\n                    <!--<div class=\"row-btn\">\n                        <div>{{range}}}</div>\n                        <range-slider v-model=\"cluster\" type=\"range\" min=\"0\" max=\"800\" step=\"10\" />\n                    </div>-->\n                </div>\n                <classifier v-if=\"classify\" :nodes=\"classifyNodes\" :labels=\"labels\"/>\n                <div class=\"info-box\">\n                    <img class=\"img\" v-if=\"activeNode.hasImage\" :src=\"activeNode.image.src\" />\n                    <div>Name: {{activeNode.name}}</div>\n                    <div>Label: {{activeNode.label}}</div>\n                    <div>Links #: {{selectedNodeNeighboursCount}}</div>\n                    <div>S: {{scale}}</div>\n                    <div>IS: {{scale2}}</div>\n                </div>\n            </div>\n        </div>\n        <triblets :node=\"activeNode\"/>\n    </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\nimport range from '../util/range';\n// import logo from '../assets/logo.png';\n\n/*\n    TODO:\n    - rename imageWidth to imageSize\n    - rename scale to zoom\n*/\n\nfunction makeImgageData(img) {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    context.drawImage(img, 0, 0 );\n    const data =  context.getImageData(0, 0, img.width, img.height);\n    console.log(data)\n    return data\n}\n\n/* eslint no-underscore-dangle: [\"error\", { \"allowAfterThis\": true }] */\nclass Node {\n    constructor(data, ctx, hitCtx) {\n        this.name = data.name;\n        this.links = data.links;\n        this.index = data.index;\n        this._x = data.x;\n        this._y = data.y;\n        this._width = 1; // 40;\n        this._height = 1; // 40;\n        this.colorKey = data.colorKey;\n        this.color = data.color;\n        this.ctx = ctx;\n        this.hitCtx = hitCtx;\n\n        this.cluster = data.cluster;\n        this.positives = data.positives;\n        this.negatives = data.negatives;\n\n        this.label = data.label;\n        this.labels = data.labels;\n        // x,y for reseting\n        this.initX = data.x;\n        this.initY = data.y;\n\n        this.activeScale = 3; // showing images bigger\n        this.scale = 1;     // TODO is not needen anymore\n        this.icon = new Image();\n        this.icon.src = data.buffer;\n\n        this._isActive = false; // handle clicked node\n        this.isActiveNeighbour = false; // is this a neighbour of a active node?\n        this.hasImage = false; // is there detailed image?\n\n        this.image = new Image();\n        // this.image.src = `data:image/jpeg;base64,${data.buffer}`;\n\n        this.scale = null; // used for scaling the x/y position\n        this.imgScale = null; // used for scaling img width\n        //\n        this.timerId = 0;\n\n        this._value = null; // value will be set by the active nodes neighbour-values, default is 5\n\n        //this.imgData = makeImgageData(this.icon)\n\n\n    }\n\n    get width() {\n        const w = this._width;\n        if (this.isActive) return w + (w * this.activeScale);\n        if (this.isActiveNeighbour) return w + (w * this.activeScale * this.value);\n        return w;\n    }\n\n    set width(value) {\n        this._width = value;\n    }\n\n    get height() {\n        const h = this._height;\n        if (this.isActive) return h + (h * this.activeScale);\n        if (this.isActiveNeighbour) return h + (h * this.activeScale * this.value);\n        return h;\n    }\n\n    set height(value) {\n        this._height = value;\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    set value(v) {\n        if (v < 0.1) this._value = 0.1;\n        else if (v > 1) this._value = 1;\n        else this._value = v;\n    }\n\n    get isActive() {\n        return this._isActive;\n    }\n\n    set isActive(v) {\n        this._isActive = v;\n\n        /* if(this.timerId) clearInterval(this.timerId);\n        this._isActive = v;\n        if (v === true) {\n            this._isActive = v;\n            this.timerId = setInterval(() => {\n                console.log(this.activeScale)\n                this.activeScale += 0.1;\n                ;\n                if (this.activeScale >= 5) {\n                    clearInterval(this.timerId);\n                    this.activeScale = 5\n                }\n                this.triggerDraw()\n            }, 100);\n        } else if(v === false) {\n            this.timerId = setInterval(() => {\n                this.activeScale -= 0.1;\n                this.triggerDraw();\n\n                if (this.activeScale <= 1) {\n                    this._isActive = v;\n                    clearInterval(this.timerId);\n                    this.activeScale = 1\n                }\n                this.triggerDraw();\n            }, 100);\n        } */\n    }\n\n    // if isActive\n    // scale x to real/current 2d-coords\n    // subtract half width for moving left, width scaled with ImageScale\n    // scale back to Node x/y\n    // TODO the last point is because of the context is scaling it again - maybe we could get rid of this?\n\n    get x() {\n        return this._x - (this.width / 2 / this.scale);\n        // return this._x;\n    }\n\n    set x(value) {\n        this._x = value;\n    }\n\n    get y() {\n        return this._y - (this.height / 2 / this.scale);\n        // return this._y;\n    }\n\n    set y(value) {\n        this._y = value;\n    }\n\n    // simple changing the x/y is not possible because\n    // they have special getters witch would be use while setting/+= values\n    move(x, y) {\n        this._x += x;\n        this._y += y;\n    }\n\n\n    // ctx is the canvas context\n    // scale change through zooming and is used for positioning the images\n    async draw(scale, scale2, imgWidth, cluster) {\n        // console.log('start draw Image');\n        // check which picture to use\n        //this.scale = 1; // scale;\n\n        const imgData = this.icon;\n\n        /* const x = this.x;\n        const y = this.y;\n        const w = this.width; // scale / 2;\n        const h = this.height; // scale / 2 ;\n        */\n        const w = imgData.width * imgWidth / 100 / scale2;\n        const h = imgData.height * imgWidth / 100 / scale2;\n        const x = this._x - (w / 2);\n        const y = this._y - (h / 2);\n\n\n        //const data = await createImageBitmap(imgData, 0, 0, w, h)\n        // createImageBitmap(imgData,0, 0, 2, 2, {resizeHeight: h, resizeWidth: w}).then(data => {\n        //     console.log(data)\n        //     this.ctx.drawImage(data, x, y)\n        // })\n        this.ctx.drawImage(imgData, x, y, w, h)\n\n\n        this.hitCtx.fillStyle = this.colorKey;\n        this.hitCtx.fillRect(x, y, w, h);\n\n\n        // draw HitCanvas rect\n    }\n\n    drawClusterd(scale, scale2, imgWidth, cluster) {\n        const s =  1 / scale;\n        const x = this._x\n        const y = this._y\n\n        this.ctx.fillStyle = 'grey'\n        this.ctx.fillRect(x, y, s, s);\n    }\n\n    drawAsActive(scale, activeImgWidth) {\n        this.scale = 1; // scale;\n\n        const imgData = this.icon; // this.hasImage ? this.image : this.icon;\n\n        /* const x = this.x;\n        const y = this.y;\n        const w = this.width; // scale / 2;\n        const h = this.height; // scale / 2 ; */\n\n        /* const w = activeImgWidth / 10;\n        const h = activeImgWidth / 10; */\n        const w = imgData.width * activeImgWidth / 1000; // TODO if image returns check if this width should be still used\n        const h = imgData.height * activeImgWidth / 1000;\n        const x = this._x - (w / 2);\n        const y = this._y - (h / 2);\n\n\n        if (this.isActive) {\n            // console.log(`Active node while draw: ${this.name}}`);\n            // console.log(this);\n            this.ctx.globalAlpha = 1;\n\n            this.ctx.drawImage(imgData, x, y, w, h);\n            this.ctx.globalAlpha = 0.3;\n            // ctx.rect(this.x,this.y, this.width/scale,this.height/scale);\n            // ctx.stroke();\n        } else if (this.isActiveNeighbour) {\n            // console.log(`Neighbour node while draw: ${this.name}}`);\n            // console.log(this);\n            this.ctx.globalAlpha = 1;\n            this.ctx.drawImage(imgData, x, y, w, h);\n            this.ctx.globalAlpha = 0.3;\n        }\n        // draw HitCanvas rect\n        this.hitCtx.fillStyle = this.colorKey;\n        this.hitCtx.fillRect(x, y, w, h);\n    }\n\n    drawAsNeighbour(scale, activeImgWidth, value) {\n        this.scale = 1; // scale;\n\n        const imgData = this.icon; // this.hasImage ? this.image : this.icon;\n\n        /* const x = this.x;\n        const y = this.y;\n        const w = this.width; // scale / 2;\n        const h = this.height; // scale / 2 ; */\n\n        /* const w = (activeImgWidth / 10) * this.value;\n        const h = (activeImgWidth / 10) * this.value; */\n        const w = imgData.width * activeImgWidth / 1000 * this.value; // TODO if image returns check if this width should be still used\n        const h = imgData.height * activeImgWidth / 1000 * this.value;\n        const x = this._x - (w / 2);\n        const y = this._y - (h / 2);\n\n\n        this.ctx.globalAlpha = 1;\n        this.ctx.drawImage(imgData, x, y, w, h);\n        this.ctx.globalAlpha = 0.3;\n\n        // draw HitCanvas rect\n        this.hitCtx.fillStyle = this.colorKey;\n        this.hitCtx.fillRect(x, y, w, h);\n    }\n\n\n    drawBorder(scale, imgWidth, activeImgWidth, cluster, borderWidth, labelColor) {\n        /* const x = this.x;\n        const y = this.y;\n        const w = this.width; // scale;\n        const h = this.height; // scale;\n        */\n\n        const w = this.icon.width * (\n            this.isActive\n                ? activeImgWidth\n                : this.isActiveNeighbour\n                    ? activeImgWidth * this.value\n                    : imgWidth\n        ) / 1000;\n        const h = this.icon.height * (\n            this.isActive\n                ? activeImgWidth\n                : this.isActiveNeighbour\n                    ? activeImgWidth * this.value\n                    : imgWidth\n        ) / 1000;\n        /* const w = (this.isActive ? activeImgWidth : this.isActiveNeighbour ? activeImgWidth * this.value : imgWidth) / 10;\n        const h = (this.isActive ? activeImgWidth : this.isActiveNeighbour ? activeImgWidth * this.value : imgWidth) / 10; */\n        const x = this._x - (w / 2);\n        const y = this._y - (h / 2);\n\n        const lineWidth = borderWidth / 10 / scale;\n        this.ctx.strokeStyle = labelColor || this.color;\n        this.ctx.lineWidth = lineWidth;\n\n\n        if ((this.cluster < cluster) || this.isActive || this.isActiveNeighbour) {\n            // cluster represent\n            if (lineWidth) this.ctx.strokeRect(x, y, w, h);\n        } else {\n            if (lineWidth) this.ctx.strokeRect(x, y, w / scale, h / scale);\n            this.hitCtx.fillStyle = this.colorKey;\n            this.hitCtx.fillRect(x, y, w / scale, h / scale);\n        }\n    }\n\n\n    // unused cause of non-math method for findNodeUnderMouse\n    /* contains(x, y, scale) {\n        // All we have to do is make sure the Mouse X,Y fall in the area between\n        // the Node X and (X + Width) and its Y and (Y + Height)\n        const w = this.width / scale;\n        const h = this.height / scale;\n\n        // const contains = (x >= this.x) && (x <= this.x + w) && (y >= this.y) && (y <= this.y + h);\n        return (x >= this.x) && (x <= this.x + w) && (y >= this.y) && (y <= this.y + h);\n        // console.log(contains);\n        // console.log(this);\n        // console.log({ mx, my, x, y, w, h });\n\n\n        // return contains;\n    } */\n}\n\n\nclass CanvasState {\n    constructor(canvas, hitCanvas, socket, ui) {\n        this.socket = socket;\n\n        this.ui = ui\n\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        this.width = canvas.width;\n        this.height = canvas.height;\n\n        this.hitCanvas = hitCanvas;\n        this.hitCtx = hitCanvas.getContext('2d');\n\n        // **** Keep track of state! ****\n        this.kdtree = {};\n\n\n        this.valid = false; // when set to false, the canvas will redraw everything\n        this._valid = false\n        this.nodes = {}; // hash for all nodes\n        this.colorHash = {}; // find nodes by color\n        this.dragging = false; // Keep track of when we are dragging\n        this.draggNode = false; // save the node for dragging\n\n        // the current selected object. TODO  In the future we could turn this into an array for multiple selection\n        this.selection = null;\n\n        // K labels for development\n        this.showKLabels = false;\n        this.selectedLabel = null; // the choosen label for highlighten images\n        this.labelColor = null; // updatet throud ui\n\n        this.activeMode = false; // freeze for handling selection\n        this.activeNode = false; // node while freeze\n\n        this.scissors = false\n        this.drawScissors = false\n        this.scissorsStartX = 0\n        this.scissorsStartY = 0\n\n        this.scissorsEndX = 0\n        this.scissorsEndY = 0\n\n        this._cluster = 500;\n        this.updateClusterUI = null;\n        this._scale = 20;\n        this._scale2 = 20;\n        this.updateScaleUI = null;\n        this.updateScale2UI = null;\n        this._imgScale = 12;\n        this._activeImgScale = 5;\n        this._borderWidth = 5;\n\n        this._scrollRatio = 1.3;\n        this._scrollImgRatio = 1.1;\n        this._clusterRatio = 1.2;\n\n        this.classify = false; // set via UI\n        this.addNodeToClassify = null; // UI set function here\n\n        this.interval = 100;\n\n        this.offsetLeft = canvas.getBoundingClientRect().left;\n        this.offsetTop = canvas.getBoundingClientRect().top;\n\n        this.translateX = this.width / 2;\n        this.translateY = this.height / 2;\n\n        this.startX = null;\n        this.startY = null;\n        // this.ctx.translate(this.translateX / 2, this.translateY / 2);\n        // this.ctx.scale(this.scale, this.scale);\n\n\n        // add event listener\n        this.canvas.onmousedown = this.handleMouseDown;\n        this.canvas.onmousemove = this.handleMouseMove;\n        this.canvas.onmouseup = this.handleMouseUp;\n        // this.canvas.onlclick = this.handleClick;\n        this.canvas.ondblclick = this.handleDoubleClick;\n        this.canvas.onwheel = this.zoom;\n        // this.canvas.onblur = this.blur;\n        //this.timerId = setInterval(() => this.draw(), this.interval);\n    }\n\n    set scale(value) {\n        if (value < 1) this._scale = 1;\n        else this._scale = value;\n        this.valid = false;\n        this.updateScaleUI(this.scale);\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set scale2(value) {\n        if (value < 1) this._scale = 1;\n        else this._scale2 = value;\n        this.valid = false;\n        this.updateScale2UI(this.scale2);\n    }\n\n    get scale2() {\n        return this._scale2;\n    }\n\n    set imgScale(value) {\n        if (value < 1) this._imgScale = 1;\n        else this._imgScale = value;\n        this.valid = false;\n    }\n\n    get imgScale() {\n        return this._imgScale;\n    }\n\n    set activeImgScale(value) {\n        if (value < 1) this._activeImgScale = 1;\n        else this._activeImgScale = value;\n        this.valid = false;\n    }\n\n    get activeImgScale() {\n        return this._activeImgScale;\n    }\n\n    set borderWidth(value) {\n        if (value < 0) this._borderWidth = 0;\n        else this._borderWidth = value;\n        this.valid = false;\n    }\n\n    get borderWidth() {\n        return this._borderWidth;\n    }\n\n    set cluster(value) {\n        // console.log(this._cluster);\n        if (value < 1) this._cluster = 1;\n        else this._cluster = value;\n        this.valid = false;\n        this.ui.cluster = this.cluster;\n    }\n\n    get cluster() {\n        return this._cluster;\n    }\n\n    set scrollRatio(v) {\n        if (v <= 1) this._scrollRatio = 1.01;\n        else this._scrollRatio = v;\n    }\n\n    get scrollRatio() {\n        return this._scrollRatio;\n    }\n\n    set scrollImgRatio(v) {\n        if (v <= 1) this._scrollImgRatio = 1.01;\n        else this._scrollImgRatio = v;\n    }\n\n    get scrollImgRatio() {\n        return this._scrollImgRatio;\n    }\n\n    get clusterRatio() {\n        return this._clusterRatio;\n    }\n\n    set clusterRatio(v) {\n        if (v <= 1) this._clusterRatio = 1.01;\n        else this._clusterRatio = v;\n        this.ui.clusterRatio = this.clusterRatio\n    }\n\n    set valid(v) {\n        if (!v) window.requestAnimationFrame(this.draw)\n        this._valid = v;\n    }\n\n    get valid() {\n        return this._valid;\n    }\n\n    triggerDraw() {\n        this.valid = false;\n    }\n\n\n    addNode = (node) => {\n        // console.log('Node addded');\n        this.nodes[node.index] = node;\n        this.colorHash[node.colorKey] = node.index;\n        this.valid = false; // for redrawing\n    }\n\n    getNodes() {\n        this.removeSelection(); // for updating values in links before sending\n        return this.nodes;\n    }\n\n\n    range(minX, minY, maxX, maxY) {\n        // TODO min x, max should be automatic\n        const result = range(this.kdtree.ids, this.kdtree.coords, minX, minY, maxX, maxY, this.kdtree.nodeSize); // TODO is this fast?\n        console.log('range');\n        console.log(result);\n    }\n\n    resetStore() {\n        this.nodes = {};\n        this.colorHash = {};\n        this.valid = false;\n    }\n\n    clear() {\n        // move point 0,0 to middle of canvas\n        this.ctx.resetTransform();\n        this.ctx.clearRect(0, 0, this.width, this.height);\n        this.ctx.translate(this.translateX, this.translateY);\n        this.ctx.scale(this.scale, this.scale);\n\n        // same on hit ctx\n        this.hitCtx.resetTransform();\n        this.hitCtx.clearRect(0, 0, this.width, this.height);\n        this.hitCtx.translate(this.translateX, this.translateY);\n        this.hitCtx.scale(this.scale, this.scale);\n    }\n\n    draw = () => {\n        // if our state is invalid, redraw and validate!\n        if (!this.valid) {\n            console.log('reDraw started');\n            // const nodes = this.nodes;\n            this.clear();\n\n            // ** Add stuff you want drawn in the background all the time here **\n\n\n            // if some nodes are active set other transparent\n            // if (this.selection) this.ctx.globalAlpha = 0.3;\n            // else this.ctx.globalAlpha = 1;\n\n            // draw images\n            Object.values(this.nodes).forEach((node) => {\n                // if (node.isActive) node.drawAsActive(this.scale, this.activeImgScale, this.cluster);\n                // else if (node.isActiveNeighbour) node.drawAsNeighbour(this.scale, this.activeImgScale, this.cluster);\n                // else\n\n                // if node is clustered dont draw and draw pixel instead\n                if (this.cluster < node.cluster) {\n                    node.drawClusterd(this.scale, this.scale2, this.imgScale, this.cluster);\n                }\n                else node.draw(this.scale, this.scale2, this.imgScale, this.cluster);\n            });\n\n            if (this.showKLabels) {\n                // draw borders\n                Object.values(this.nodes).forEach((node) => {\n                    node.drawBorder(this.scale, this.imgScale, this.activeImgScale, this.cluster, this.borderWidth);\n                });\n            } else if (this.selectedLabel) {\n                Object.values(this.nodes).forEach((node) => {\n                    if (node.labels.indexOf(this.selectedLabel) !== -1) {\n                        node.drawBorder(this.scale, this.imgScale, this.activeImgScale, this.cluster, this.borderWidth, this.labelColor);\n                    }\n                });\n            }\n\n            if (this.drawScissors) {\n                const x = (this.scissorsStartX -this.translateX)/this.scale\n                const y = (this.scissorsStartY - this.translateY)/this.scale\n                const w = (this.scissorsEndX - this.scissorsStartX)/this.scale\n                const h = (this.scissorsEndY - this.scissorsStartY)/this.scale\n\n                this.ctx.strokeStyle = '#3882ff'\n                this.ctx.lineWidth = 2 / this.scale\n\n                this.ctx.strokeRect(x, y, w, h)\n                this.ctx.globalAlpha = 0.2;\n                this.ctx.fillRect(x, y, w, h)\n                this.ctx.globalAlpha = 1.0;\n            }\n\n            // draw Tribles\n\n\n            /*\n            if (this.activeMode) {\n                ctx.globalAlpha = 0.1;\n                Object.values(this.nodes).map((node) => {\n                    // TODO skip the drawing of elements that have moved off the screen:\n                    if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 1;\n                    node.draw(ctx, this.scale);\n                    if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 0.1;\n                });\n            } else {\n                ctx.globalAlpha = 1;\n\n            }\n\n            // enlarge coordinates\n            // draw all nodes\n            Object.values(this.nodes).map((node) => {\n                // We can skip the drawing of elements that have moved off the screen:\n                // TODO handle elements offside the screen\n\n                if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 1;\n                node.draw(ctx, this.scale);\n                if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 1;\n            });\n*/\n            // ** Add stuff you want drawn on top all the time here **\n\n\n            this.valid = true;\n        }\n    }\n\n    zoom = (wheelEvent) => {\n        console.log('zoom event');\n        wheelEvent.preventDefault();\n        wheelEvent.stopPropagation();\n        // console.log(wheelEvent)\n        const nodeUnderMouse = this.findNodeByMousePosition(wheelEvent.offsetX, wheelEvent.offsetY);\n\n        if (this.selection && nodeUnderMouse && nodeUnderMouse.isActiveNeighbour) {\n            console.log('nodeUnderMouse');\n            console.log(nodeUnderMouse.name);\n\n            if (wheelEvent.deltaY < 0) {\n                console.log('zoom in - image smaller');\n                nodeUnderMouse.value -= 0.1;\n            }\n\n            // Zoom out = decrease = wheel down = positiv delta Y\n            if (wheelEvent.deltaY > 0) {\n                console.log('zoom out - image bigger');\n                nodeUnderMouse.value += 0.1;\n            }\n\n            this.valid = false;\n        } else {\n            const mouseX = wheelEvent.offsetX;\n            const mouseY = wheelEvent.offsetY;\n            // get mouse movement based on the last triggered event\n            const offsetX = (mouseX - this.translateX) / this.scale; // +80 means move 80px to right\n            const offsetY = (mouseY - this.translateY) / this.scale; // -50 means move 50 to top\n            // console.log({ moveX, moveY });\n\n            // console.log(\"mouse position\")\n            // console.log({mouseX, mouseY})\n            // console.log(\"Offset - distanz to null point \")\n            // console.log({offsetX, offsetY})\n            // console.log(\"nullpoint position\")\n            // console.log(this.translateX, this.translateY)\n\n\n            const oldScale = this.scale;\n\n            // Zoom in = increase = wheel up = negativ delta Y\n            if (wheelEvent.deltaY < 0) {\n                console.log('zoom in');\n\n                this.scale *= this.scrollRatio;\n                this.scale2 *= this.scrollImgRatio;\n                this.cluster *= this.clusterRatio;\n            }\n\n            // Zoom out = decrease = wheel down = positiv delta Y\n            if (wheelEvent.deltaY > 0) {\n                console.log('zoom out');\n\n                this.scale /= this.scrollRatio;\n                this.scale2 /= this.scrollImgRatio;\n                this.cluster /= this.clusterRatio;\n            }\n            const scaleChange = this.scale - oldScale;\n            this.translateX -= offsetX * scaleChange;\n            this.translateY -= offsetY * scaleChange;\n\n            this.valid = false;\n        }\n\n        // console.log(this.scale);\n        // this.ctx.scale(this.scale, this.scale);\n        return false;\n    }\n\n    findNodeByMousePosition(x, y) {\n        // old math way\n        /* // find 'first' node under click\n        // slice makes copy of array\n        // translate X/Y to node x/y\n        const nodeX = (x - this.translateX) / this.scale;\n        const nodeY = (y - this.translateY) / this.scale;\n        return Object.values(this.nodes).slice(0).reverse().find(\n            node => node.contains(nodeX, nodeY, this.scale),\n        ); */\n        const pixel = this.hitCtx.getImageData(x, y, 1, 1).data;\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\n        const nodeId = this.colorHash[color];\n        if (nodeId >= 0) {\n            return this.nodes[nodeId];\n        } return null;\n    }\n\n    selectNode(node) {\n        // delete old node\n        if (this.selection && this.selection !== node) this.removeSelection();\n        this.selection = node;\n        console.log('selected Node');\n        console.log(node);\n        // const activeNode = this.selection;\n        // mark node as active\n        this.selection.isActive = true;\n\n        // load detail image\n        /* if (!node.hasImage) {\n            console.log('request image');\n            socket.emit('requestImage', node.name);\n        } */\n\n        // mark neighbours\n        Object.entries(node.links).forEach(([index, strength]) => {\n            // console.log(n.target);\n            const neighbour = this.nodes[index];\n\n            if (neighbour) {\n                // mark as neighbour of a active note\n                neighbour.isActiveNeighbour = true;\n                // set value from links to nodes\n                neighbour.value = strength;\n                // load neighbours detailed image\n                // if (!this.nodes[n.target].hasImage) socket.emit('requestImage', { name: this.nodes[n.target].name, index: this.nodes[n.target].index });\n\n                // console.error(`FOUND Neighbours ID: ${n.target} Name: ${this.nodes[n.target].name} Value: ${n.value} isActive ${this.nodes[n.target].isActiveNeighbour}`);\n            } else {\n                // TODO proper error handling - inform Katja that there is a link to a node that is not existing\n                // console.error(`Neighbours ID: ${index} is not a not found in nodes`);\n                // console.log(node)\n            }\n        });\n\n        this.triggerDraw();\n    }\n\n    removeSelection() {\n        const selectedNode = this.selection;\n\n        // this.updateSelectionUI(false);\n\n        // mark the neighbours as not active\n        if (selectedNode) {\n            // console.log(\"remove selection\")\n            // console.log(this.selection)\n\n            // deactivated selected node\n            selectedNode.isActive = false;\n\n            // deactivated all neighbours\n            Object.keys(selectedNode.links).forEach((index) => {\n                const neighbour = this.nodes[index];\n\n                if (neighbour) {\n                    neighbour.isActiveNeighbour = false;\n                    // update (new) values in links\n                    selectedNode.links[index] = neighbour.value;\n                    // n.value = neighbour.value;\n                } else {\n                    // TODO proper error handling - inform Katja that there is a link to a node that is not existing\n                    // console.error(`Neighbours ID: ${index} is not a not found in nodes`);\n                }\n            });\n        }\n        // remove selection\n        this.selection = null;\n        this.valid = false; // redraw\n    }\n\n    handleMouseDown = (e) => {\n        // tell the browser we're handling this mouse event\n        e.preventDefault();\n        e.stopPropagation();\n        // console.log(e)\n\n        // console.log(this.hitCanvas.width);\n        // console.log(this.hitCtx.width);\n        // console.log(this.canvas.width);\n        // console.log(this.ctx.width);\n        const shiftKeyPressed = e.shiftKey;\n\n        const ctrlKeyPressed = e.ctrlKey;\n        const altKeyPressed = e.altKey;\n\n        const nodeUnderMouse = this.findNodeByMousePosition(e.offsetX, e.offsetY);\n\n        // TODO test if mouse hits Image and set their drag flag\n\n        console.log('mousedown');\n        // console.log(e.offsetX);\n        // console.log(e.offsetY);\n        console.log(this.classify);\n\n        // save start position\n        this.startX = e.offsetX;\n        this.startY = e.offsetY;\n\n\n        // if there is no mouse under mouse then move everything\n        if (nodeUnderMouse) {\n            this.draggNode = nodeUnderMouse;\n            // freeze = activation Mode\n            if (this.activeMode) {\n                if (false) {\n                    // remove neighbour\n                    if (nodeUnderMouse.isActiveNeighbour) {\n                        nodeUnderMouse.isActiveNeighbour = false;\n                        // this.selection.neighbours = this.selection.neighbours.filter(item => item.target !== nodeUnderMouse.index);\n                        delete this.selection.links[nodeUnderMouse.index]; // remove link\n                        this.valid = false;\n                    }\n                    // add neighbour if node is is not active node\n                    else if (this.selection !== nodeUnderMouse) {\n                        // nodeUnderMouse.v = 5\n                        // this.selection.neighbours.push({ target: nodeUnderMouse.index, value: 0.5 });\n                        this.selection.links[nodeUnderMouse.index] = 0.5;\n                        nodeUnderMouse.isActiveNeighbour = true;\n                        nodeUnderMouse.value = 0.5;\n                        this.valid = false;\n                    }\n                } else if (ctrlKeyPressed) {\n                    // add to left /negatives\n                    this.activeNode.negatives.push(nodeUnderMouse);\n                } else if (altKeyPressed || shiftKeyPressed) {\n                    // add to right // positives\n                    this.activeNode.positives.push(nodeUnderMouse);\n                }\n            } else if (this.classify) {\n                // add node to\n                console.log('click while classify mode');\n                this.addNodeToClassify(nodeUnderMouse);\n            }\n        } else if (this.scissors) {\n            console.log(\"Scissors\")\n            // save start X/Y\n            this.drawScissors = true\n            this.scissorsStartX = this.startX\n            this.scissorsStartY = this.startY\n            this.valid = false\n\n        } else {\n                // if nothing is clicked\n                this.dragging = true\n        }\n        }\n\n\n    handleMouseMove = (e) => {\n        // other way for getting x/y\n        /* const mousePos = {\n            x: e.clientX - canvas.offsetLeft,\n            y: e.clientY - canvas.offsetTop\n        }; */\n\n        const mouseX = e.offsetX;\n        const mouseY = e.offsetY;\n\n        if(this.scissors) {\n            this.scissorsEndX = mouseX\n            this.scissorsEndY = mouseY\n            this.valid = false\n        }\n\n\n        // there is a freeze and not freeze mode - different interaction based ob if a node is active or node\n        const nodeUnderMouse = this.findNodeByMousePosition(mouseX, mouseY);\n\n        // load high resoultion image\n        if (nodeUnderMouse && !nodeUnderMouse.hasImage) this.socket.emit('requestImage', { name: nodeUnderMouse.name, index: nodeUnderMouse.index });\n\n        if(!this.activeMode) {\n            if(nodeUnderMouse) this.ui.activeNode = nodeUnderMouse\n            else this.ui.activeNode = false\n        }\n\n\n        if (this.draggNode || this.dragging) {\n            // get mouse movement based on the last triggered event\n            const moveX = mouseX - this.startX; // +80 means move 80px to right\n            const moveY = mouseY - this.startY; // -50 means move 50 to top\n            // console.log({ moveX, moveY });\n\n            // save new mouse position for next event\n            this.startX = mouseX;\n            this.startY = mouseY;\n\n            if (this.dragging) {\n                // move the x/y\n                this.translateX += moveX;\n                this.translateY += moveY;\n            } else if (this.draggNode) {\n                // scale the X/Y\n                const nodeX = moveX / this.scale;\n                const nodeY = moveY / this.scale;\n\n                this.draggNode.move(nodeX, nodeY);\n\n                // drag neighbours in freeze mode\n                if (this.activeMode && this.draggNode.isActive) {\n                    Object.keys(this.draggNode.links).forEach((i) => {\n                        const neighbour = this.nodes[i];\n                        // todo error handling if the neighbour is not existing for katja\n                        if (neighbour) neighbour.move(nodeX * neighbour.value, nodeY * neighbour.value);\n                    });\n                }\n            }\n            this.triggerDraw();\n        } else if (!this.activeMode) {\n            // mouse moves over empty area after being over a node\n            if (!nodeUnderMouse && this.selection) this.removeSelection();\n            // mouse over picture and no picture before\n            else if (!this.selection && nodeUnderMouse) this.selectNode(nodeUnderMouse);\n            // mouse over picture but not the is allread selected = new picture selected\n            else if (nodeUnderMouse && nodeUnderMouse !== this.selection) {\n                this.removeSelection();\n                this.selectNode(nodeUnderMouse);\n            }\n        }\n        /*\n        // move neighbours of active Node in freeze mode\n        if (this.activeMode && this.draggNode.isActive) {\n\n            // mouse is over a neighbour\n            if (this.dragging.isActive || this.dragging.isActiveNeighbour) {\n                // drag the node and al of his neighbour\n                // TODO later the 'moving weighted with values# should be toggled with a button\n\n\n                // console.log({ nodeX, nodeY });\n\n                // change the Node position\n                this.dragging.move(nodeX, nodeY);\n                // console.log(this.dragging)\n                if (this.dragging.isActive) {\n                    // change position of neighbours\n                    /!*this.dragging.neighbours.forEach((n) => {\n                        const neighbour = this.nodes[n.target];\n                        // todo their should not be a case where n.target is outside the array\n                        if (neighbour) {\n                            neighbour.move(nodeX * neighbour.value, nodeY * neighbour.value);\n                        }\n                    });*!/\n\n                }\n\n                this.valid = false;\n            }\n        } else if (this.dragging === true) {\n           /!* console.log('dragging');\n            const moveX = e.offsetX - this.startX; // +80 means move 80px to right\n            const moveY = e.offsetY - this.startY; // -50 means move 50 to top\n            // console.log({ moveX, moveY });\n            this.startX = e.offsetX;\n            this.startY = e.offsetY;\n\n\n            // start drawing\n            this.valid = false;*!/\n        } else\n\n        // mouse over empty area */\n    }\n\n    handleMouseUp = () => {\n        console.log('mouseup');\n        this.dragging = false;\n        this.draggNode = false;\n\n        if(this.scissors) {\n            this.scissors = false\n            this.drawScissors = false\n            this.ui.scissors = false\n            this.valid = false\n            // TODO handle object in scissors rectangle\n        }\n    }\n\n\n    handleDoubleClick = () => {\n        console.log('Double click');\n\n        if (this.selection && !this.activeMode) {\n            this.activeMode = true;\n            this.ui.activeNode = this.activeNode;\n            //this.activeNode = this.selection;\n            // update ui\n        } else if (this.activeMode) {\n            this.ui.activeNode = false;\n            this.activeNode = false;\n            //this.activeMode = false;\n        }\n        this.triggerDraw();\n    }\n}\n\nimport RangeSlider from './RangeSlider';\nimport Triblets from './Triblets';\nimport Classifier from './Classifier';\nimport Scissors from \"../icons/Scissors\";\n\nexport default {\n    store: null,\n    name: 'TsneMap',\n    components: {\n        Scissors,\n        RangeSlider,\n        Triblets,\n        Classifier,\n    },\n    data: () => ({\n        items: [],\n        positives: [],\n        negatives: [],\n        // store: null,\n        socket: null,\n        connectedToSocket: false,\n        loadingNodes: false,\n        nodesCount: 0,\n        scale: 0,\n        scale2: 0,\n        labels: [],\n        selectedLabel: null,\n        labelColor: '#6057ff',\n        showKLabels: false,\n        scissors: false,\n        width: 0,\n        height: 0,\n        activeNode: {},\n        cluster: 5, // default - set on mount from CanvasStore class\n        imgWidth: 0, // default - set on mount from CanvasStore class\n        activeImgWidth: 0, // default - set on mount from CanvasStore class\n        borderWidth: 0, // default - set on mount from CanvasStore class\n        range: 0,\n        classify: false, // toggle classify mode on/off\n        classifyNodes: [], // selected nodes for classification\n        showOptions: false, // show options menu\n        scrollRatio: 0,\n        scrollImgRatio: 0,\n        clusterRatio: 0,\n\n    }),\n    methods: {\n        sendData() {\n            console.log('send data clicked');\n            const nodes = this.store.getNodes();\n            // this.store.clear()\n            this.store.resetStore();\n            this.socket.emit('updateNodes', nodes);\n            this.loadingNodes = true;\n            this.nodesCount = 0;\n        },\n\n        //\n        changeCluster(v) {\n            // console.log(\"cluster more clicked\")\n            this.store.cluster += v; // update canvasState\n            this.cluster = this.store.cluster; // update ui\n        },\n\n        updateSelection(node) {\n            if (!node) {\n                // deactivation\n                this.activeNode = {};\n            } else {\n                this.activeNode = node;\n            }\n        },\n\n        updateScale(scale) {\n            this.scale = scale;\n        },\n\n        updateScale2(scale2) {\n            this.scale2 = scale2;\n        },\n\n        changeImgWidth(v) {\n            this.store.imgScale += v; // update canvasState\n            this.imgWidth = this.store.imgScale; // update ui\n        },\n\n        activeImgWidthMore() {\n            this.store.activeImgScale += 1; // update canvasState\n            this.activeImgWidth = this.store.activeImgScale; // update ui\n        },\n        activeImgWidthLess() {\n            this.store.activeImgScale -= 1; // update canvasState\n            this.activeImgWidth = this.store.activeImgScale; // update ui\n        },\n\n        borderWidthMore() {\n            this.store.borderWidth += 1; // update canvasState\n            this.borderWidth = this.store.borderWidth; // update ui\n        },\n        borderWidthLess() {\n            this.store.borderWidth -= 1; // update canvasState\n            this.borderWidth = this.store.borderWidth; // update ui\n        },\n        toggleClassify() {\n            console.log('classify clicked');\n            this.classify = !this.classify;\n            this.store.classify = this.classify;\n            console.log(this.store.classify);\n        },\n        addNodeToClassify(node) {\n            console.log('addNodeToClassify');\n            console.log(node);\n            if (this.classifyNodes.indexOf(node) === -1) this.classifyNodes.push(node);\n        },\n        toggleShowOptions() {\n            this.showOptions = !this.showOptions;\n        },\n        changeScrollRatio(v) {\n            this.store.scrollRatio = Math.round((this.store.scrollRatio + v) * 100) / 100;\n            this.scrollRatio = this.store.scrollRatio;\n        },\n        changeScrollImgRatio(v) {\n            this.store.scrollImgRatio = Math.round((this.store.scrollImgRatio + v) * 100) / 100;\n            this.scrollImgRatio = this.store.scrollImgRatio;\n        },\n        changeClusterRatio(v) {\n            this.store.clusterRatio = Math.round((this.store.clusterRatio + v) * 100) / 100;\n            //this.clusterRatio = this.store.clusterRatio;\n        },\n        toggleShowKLabels() {\n            this.showKLabels = !this.showKLabels;\n            this.store.showKLabels = this.showKLabels;\n            this.store.valid = false;\n            console.log(this.showKLabels);\n        },\n        toogleLabel(label) {\n            if (this.selectedLabel === label) this.selectedLabel = null;\n            else this.selectedLabel = label;\n            this.store.selectedLabel = this.selectedLabel;\n            this.store.triggerDraw()\n        },\n        selectScissors() {\n            console.log(\"selectScissors\")\n            this.scissors = !this.scissors\n            this.store.scissors = this.scissors\n        }\n\n    },\n    watch: {\n        cluster(value) {\n            console.log('change cluster');\n            this.store.cluster = value;\n        },\n    },\n    computed: {\n        selectedNode() {\n            return this.store && this.store.selection && this.store.selection.name;\n        },\n        selectedNodeNeighboursCount() {\n            return this.activeNode.links && Object.keys(this.activeNode.links).length;\n        },\n        imageScale() {\n            return this.store && this.store.selection && this.store.selection.imageScale;\n        },\n    },\n    mounted() {\n        const socket = io.connect('http://localhost:3000', {\n            transports: ['websocket'],\n            reconnectionDelay: 100,\n            reconnectionDelayMax: 1000,\n        });\n        const canvas = document.getElementById('canvas');\n        const parantWidth = canvas.parentNode.clientWidth * 0.8;\n        const parantHeight = 700; // canvas.parentNode.clientHeight //* 0.8\n\n        this.width = parantWidth;\n        this.height = parantHeight;\n\n        const hitCanvas = document.createElement('canvas');\n\n        canvas.width = parantWidth;\n        canvas.height = parantHeight;\n\n        hitCanvas.width = parantWidth;\n        hitCanvas.height = parantHeight;\n\n        // const ctx = canvas.getContext('2d');\n        const s = new CanvasState(canvas, hitCanvas, socket, this);\n\n        this.store = s;\n\n        s.updateSelectionUI = this.updateSelection;\n        s.updateScaleUI = this.updateScale;\n        s.updateScale2UI = this.updateScale2;\n        s.addNodeToClassify = this.addNodeToClassify;\n\n        // sync values from UI to store\n        s.labelColor = this.labelColor;\n\n        // set init value in UI\n        this.cluster = s.cluster;\n        this.imgWidth = s.imgScale;\n        this.activeImgWidth = s.activeImgScale;\n        this.borderWidth = s.borderWidth;\n        this.scrollRatio = s.scrollRatio;\n        this.scrollImgRatio = s.scrollImgRatio;\n\n        console.log('Save store');\n        console.log(this.store);\n        this.socket = socket;\n\n        socket.on('connect', () => {\n            this.connectedToSocket = true;\n            console.log('conected'); // das wirft immer unde\n            console.log(`Socket id: ${socket.id}`); // das wirft immer unde\n            console.log(socket);\n            // if there is allready data then this is just a reconnect\n            const nodes = this.store.getNodes();\n            console.log('nodes in store while connect (its maybe just a reconnect)');\n            console.log(nodes);\n            if (!Object.keys(nodes).length && !this.loadingNodes) {\n                socket.emit('updateNodes', {});\n                this.loadingNodes = true;\n            }\n            // s.clear() // maybe there is something inside?\n        });\n        socket.on('disconnect', (reason) => {\n            this.connectedToSocket = false;\n            console.log(`disconnect: ${reason}`); // das wirft immer unde\n            console.log(socket);\n            // s.clear() // maybe there is something inside?\n        });\n\n        socket.on('node', (data, cb) => {\n            if (data.index % 100 === 0) {\n                console.log(`receive node ${data.index}`);\n                console.log(data);\n            }\n\n            s.addNode(new Node(data, s.ctx, s.hitCtx));\n            s.triggerDraw();\n            cb(data.index);\n        });\n\n        socket.on('receiveImage', (data) => {\n            // console.log('receive image data');\n            // console.log(data);\n            const node = s.nodes[data.index];\n            // console.log(node);\n            node.image.src = `data:image/jpeg;base64,${data.buffer}`;\n            node.hasImage = true;\n            s.valid = false;\n        });\n\n        socket.on('allNodesUpdated', () => {\n            this.loadingNodes = false;\n        });\n        socket.on('nodesCount', (nodesCount) => {\n            console.log(`nodesCount: ${nodesCount}`);\n            this.nodesCount = nodesCount;\n        });\n\n        socket.on('updateLabels', (data) => {\n            console.log('updateLabels');\n            console.log(data);\n            this.labels = data;\n        });\n\n        socket.on('updateKdtree', (kdtree) => {\n            console.log('updateKdtree');\n            console.log(kdtree);\n            s.kdtree = kdtree;\n            // console.log(s.range(-5 ,-5 ,5 ,5))\n        });\n        // this.updateCanvas();\n\n        socket.on('connect_error', () => {\n            console.log('connect_error');\n        });\n\n        socket.on('connect_timeout', () => {\n            console.log('connect_timeout');\n        });\n\n        socket.on('reconnect', () => {\n            console.log('reconnect');\n        });\n\n        socket.on('connecting', () => {\n            console.log('connecting');\n        });\n\n        socket.on('reconnecting', () => {\n            console.log('reconnecting');\n        });\n\n        socket.on('connect_failed', () => {\n            console.log('connect_failed');\n        });\n\n        socket.on('reconnect_failed', () => {\n            console.log('reconnect_failed');\n        });\n\n        socket.on('close', () => {\n            console.log('close');\n        });\n    },\n    beforeDestroy() {\n        // end connection with server socket\n        if (this.socket) this.socket.disconnect();\n        // clear check-for-drawing interval\n        clearInterval(this.store.timerId);\n    },\n};\n</script>\n\n<style scoped>\n\n\n    #canvas {\n        margin: 5px;\n        background-color: white;\n        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\n    }\n    #canvas.classify {\n        cursor: cell;\n    }\n\n\n    .sub-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        height: 2.5rem;\n\n        padding: 5px;\n\n    }\n\n    .body {\n        width: 100%;\n        height: 100%;\n        /*background-color: rgb(255, 90, 75);*/\n        /*//color: black;*/\n        /*padding: 5px;*/\n    }\n\n    .details {\n        width: 18%;\n        height: 100%;\n        margin: 5px;\n        background-color: white;\n    }\n\n    .row {\n        display: flex;\n\n    }\n\n    .row-btn {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .info-box {\n        padding: 0.5rem;\n    }\n\n    .img {\n        max-width: 100%;\n        max-height: 20rem;\n    }\n\n    input {\n\n    }\n\n    .loader {\n        border: 3px solid #f3f3f3; /* Light grey */\n        border-top: 3px solid #6772e5; /* Blue */\n        border-radius: 50%;\n        width: 15px;\n        height: 15px;\n        animation: spin 2s linear infinite;\n    }\n\n    @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/TsneMap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"body\"},[_c('div',{staticClass:\"sub-header\"},[_c('div',{staticClass:\"tool-box row\"},[(_vm.loadingNodes)?_c('div',{staticClass:\"loader\"}):_vm._e(),_vm._v(\" \"),_c('scissors',{attrs:{\"active\":_vm.scissors,\"clickHandler\":_vm.selectScissors}},[_vm._v(\"a\")])],1),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',[_vm._v(\"# \"+_vm._s(_vm.nodesCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"connected: \"+_vm._s(_vm.connectedToSocket))])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_vm._l((_vm.labels),function(value,i){return _c('div',{key:i,staticClass:\"btn\",class:{ active: _vm.selectedLabel === value },style:({'color': value}),on:{\"click\":function($event){_vm.toogleLabel(value)}}},[_vm._v(\"\\n                \"+_vm._s(value)+\"\\n            \")])}),_vm._v(\" \"),_c('div',{staticClass:\"btn\",class:{ active: _vm.showKLabels },on:{\"click\":_vm.toggleShowKLabels}},[_vm._v(\"\\n                K-Label\\n            \")])],2),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",class:{ active: _vm.classify },on:{\"click\":_vm.toggleClassify}},[_vm._v(\"Classification\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",class:{ active: _vm.showOptions },on:{\"click\":_vm.toggleShowOptions}},[_vm._v(\"Options\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":_vm.sendData}},[_vm._v(\"Update Data\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('canvas',{ref:\"canvas\",class:{classify: _vm.classify},attrs:{\"id\":\"canvas\",\"tabindex\":\"0\"}}),_vm._v(\" \"),_c('div',{staticClass:\"details\"},[(_vm.showOptions)?_c('div',{staticClass:\"options info-box\"},[_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"Cluster: \"+_vm._s(Math.roang(_vm.cluster)))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeCluster(-100)}}},[_vm._v(\"-100\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeCluster(-1000)}}},[_vm._v(\"-1000\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeCluster(100)}}},[_vm._v(\"+100\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeCluster(1000)}}},[_vm._v(\"+1000\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"ImageWidth: \"+_vm._s(_vm.imgWidth))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeImgWidth(-2)}}},[_vm._v(\"-2\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeImgWidth(2)}}},[_vm._v(\"+2\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"ImageWidth(active): \"+_vm._s(_vm.activeImgWidth))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":_vm.activeImgWidthLess}},[_vm._v(\"-1\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":_vm.activeImgWidthMore}},[_vm._v(\"+1\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"BorderWidth: \"+_vm._s(_vm.borderWidth))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":_vm.borderWidthLess}},[_vm._v(\"-1\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":_vm.borderWidthMore}},[_vm._v(\"+1\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"ScrollRatio: \"+_vm._s(_vm.scrollRatio))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeScrollRatio(-0.01)}}},[_vm._v(\"-0.1\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeScrollRatio(0.01)}}},[_vm._v(\"+0.1\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"ScrollImgRatio: \"+_vm._s(_vm.scrollImgRatio))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeScrollImgRatio(-0.01)}}},[_vm._v(\"-0.1\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeScrollImgRatio(0.01)}}},[_vm._v(\"+0.1\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row-btn\"},[_c('div',[_vm._v(\"ClusterRatio: \"+_vm._s(_vm.clusterRatio))]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeClusterRatio(-0.01)}}},[_vm._v(\"-0.1\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.changeClusterRatio(0.01)}}},[_vm._v(\"+0.1\")])])])]):_vm._e(),_vm._v(\" \"),(_vm.classify)?_c('classifier',{attrs:{\"nodes\":_vm.classifyNodes,\"labels\":_vm.labels}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"info-box\"},[(_vm.activeNode.hasImage)?_c('img',{staticClass:\"img\",attrs:{\"src\":_vm.activeNode.image.src}}):_vm._e(),_vm._v(\" \"),_c('div',[_vm._v(\"Name: \"+_vm._s(_vm.activeNode.name))]),_vm._v(\" \"),_c('div',[_vm._v(\"Label: \"+_vm._s(_vm.activeNode.label))]),_vm._v(\" \"),_c('div',[_vm._v(\"Links #: \"+_vm._s(_vm.selectedNodeNeighboursCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"S: \"+_vm._s(_vm.scale))]),_vm._v(\" \"),_c('div',[_vm._v(\"IS: \"+_vm._s(_vm.scale2))])])],1)]),_vm._v(\" \"),_c('triblets',{attrs:{\"node\":_vm.activeNode}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-10bf7936\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/TsneMap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-10bf7936\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TsneMap.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./TsneMap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./TsneMap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-10bf7936\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./TsneMap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-10bf7936\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/TsneMap.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <p>Name: {{ coin.name }}</p>\r\n    <p>Symbol: {{ coin.symbol }}</p>\r\n    <p>Price (USD): {{ coin.price_usd }}</p>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\n\r\nexport default {\r\n    name: 'Coins',\r\n\r\n    data() {\r\n        return {\r\n            coin: {},\r\n        };\r\n    },\r\n\r\n    created() {\r\n        this.fetchData();\r\n    },\r\n\r\n    watch: {\r\n        $route: 'fetchData',\r\n    },\r\n\r\n    methods: {\r\n        fetchData() {\r\n            fetch(`https://api.coinmarketcap.com/v1/ticker/${this.$route.params.id}/`)\r\n                .then((resp) => {\r\n                    this.coin = resp.data[0];\r\n                    console.log(resp);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Coins.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\"Name: \"+_vm._s(_vm.coin.name))]),_vm._v(\" \"),_c('p',[_vm._v(\"Symbol: \"+_vm._s(_vm.coin.symbol))]),_vm._v(\" \"),_c('p',[_vm._v(\"Price (USD): \"+_vm._s(_vm.coin.price_usd))])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-072dadfc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Coins.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-072dadfc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Coins.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Coins.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Coins.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-072dadfc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Coins.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-072dadfc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Coins.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport Welcome from '@/components/Welcome';\r\nimport TsneMap from '@/components/TsneMap';\r\nimport Coins from '@/components/Coins';\r\n\r\nVue.use(Router);\r\n\r\nexport default new Router({\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            name: 'Welcome',\r\n            component: Welcome,\r\n        }, {\r\n            path: '/TsneMap',\r\n            name: 'TsneMap',\r\n            component: TsneMap,\r\n        }, {\r\n            path: '/coins/:id',\r\n            name: 'Coins',\r\n            component: Coins,\r\n        },\r\n    ],\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport Vue from 'vue';\r\nimport App from './App';\r\nimport router from './router';\r\nimport './index.css';\r\n\r\nVue.config.productionTip = false;\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n    el: '#app',\r\n    router,\r\n    components: { App },\r\n    template: '<App/>',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}