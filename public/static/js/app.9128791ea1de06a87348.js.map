{"version":3,"sources":["webpack:///./src/components/NavHeader.vue?e6b5","webpack:///./src/components/NavHeader.vue","webpack:///src/App.vue","webpack:///src/components/NavHeader.vue","webpack:///./src/App.vue?445c","webpack:///./src/App.vue","webpack:///./src/components/Welcome.vue?64b4","webpack:///./src/components/Welcome.vue","webpack:///src/components/Welcome.vue","webpack:///src/components/TsneMap.vue","webpack:///./src/components/TsneMap.vue?0c9a","webpack:///./src/components/TsneMap.vue","webpack:///src/components/Coins.vue","webpack:///./src/components/Coins.vue?349f","webpack:///./src/components/Coins.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["components_NavHeader","render","_h","this","$createElement","_c","_self","attrs","id","to","name","_v","staticRenderFns","App","NavHeader","__webpack_require__","normalizeComponent","ssrContext","selectortype_template_index_0_src_App","src_App","App_normalizeComponent","components_Welcome","src_components_Welcome","Welcome_normalizeComponent","TsneMap_Node","classCallCheck_default","Node","links","index","x","y","colorKey","color","label","triggerDraw","Image","buffer","scale","icon","h","imageScale","value","_width","_height","_value","v","_isActive","TsneMap_CanvasState","_this","node","ctx","clear","globalAlpha","preventDefault","stopPropagation","offsetY","width","shiftKey","offsetX","nodeUnderMouse","mouseY","mouseX","moveX","moveY","nodeY","i","removeSelection","selection","socket","canvas","hitCanvas","height","left","top","handleMouseDown","handleMouseMove","handleMouseUp","handleDoubleClick","zoom","interval","nodes","resetTransform","translateY","data","nodeId","_this2","_ref2","slicedToArray_default","_ref","strength","_this3","TsneMap","getNodes","resetStore","store","updateCanvas","_this4","length","_this5","parantWidth","s","updateScale","getScale","soc","disconnect","components_TsneMap","_vm","staticClass","_s","scale1","scale2","on","click","$event","scaleDown","_l","key","style","sendData","ref","selectedNode","selectedNodeNeighboursCount","selectedNodeX","selectedNodeY","src_components_TsneMap","TsneMap_normalizeComponent","Coins","fetchData","then","resp","catch","err","components_Coins","coin","symbol","price_usd","src_components_Coins","Coins_normalizeComponent","vue_esm","use","vue_router_esm","router","routes","path","component","config","productionTip","el","components","template"],"mappings":"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","file":"static/js/app.9128791ea1de06a87348.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"header\"}},[_c('router-link',{attrs:{\"to\":{ name: 'Welcome' }}},[_vm._v(\"Home\")]),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":\"/TsneMap\"}},[_vm._v(\"TsneMap\")]),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":\"/about\"}},[_vm._v(\"About\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3aee8ca0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/NavHeader.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3aee8ca0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./NavHeader.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavHeader.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavHeader.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3aee8ca0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./NavHeader.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3aee8ca0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/NavHeader.vue\n// module id = null\n// module chunks = ","\n<template>\n    <div id=\"app\">\n        <NavHeader > </NavHEader>\n\n        <router-view/>\n    </div>\n</template>\n\n<script>\nimport NavHeader from './components/NavHeader';\n\nexport default {\n    name: 'App',\n    components: { NavHeader },\n};\n</script>\n\n<style>\n    body {\n        margin: 0 !important;\n    }\n\n\n    #app {\n        font-family: Camphor, Open Sans, Segoe UI, sans-serif;\n        text-rendering: optimizeLegibility;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        color: #2c3e50;\n        margin: 0;\n    }\n\n    .button {\n        margin: 10px;\n        height: 40px;\n        line-height: 40px;\n        padding: 0 14px;\n        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);\n        background: #fff;\n        color: #6772e5;\n        border-radius: 4px;\n        font-size: 15px;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: .025em;\n        transition: all .15s ease;\n        cursor: pointer;\n    }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n    <div id=\"header\">\n        <router-link :to=\"{ name: 'Welcome' }\">Home</router-link>\n        <router-link to=\"/TsneMap\">TsneMap</router-link>\n        <router-link to=\"/about\">About</router-link>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'NavHeader',\n};\n</script>\n\n<style scoped>\n    #header {\n        display: flex;\n        align-items: center;\n        height: 50px;\n        box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n    }\n\n    a {\n        text-decoration: none;\n        margin: 10px;\n        height: 40px;\n        line-height: 40px;\n        padding: 0 14px;\n        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);\n        background: #fff;\n        color: #6772e5;\n        border-radius: 4px;\n        font-size: 15px;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: .025em;\n        transition: all .15s ease;\n        cursor: pointer;\n    }\n\n    a:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\n    }\n\n    .router-link-active {\n        color: #fff;\n        background: #6772e5;\n    }\n    .router-link-active:hover {\n        color: #fff;\n        background-color: #7795f8;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/NavHeader.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('NavHeader'),_vm._v(\" \"),_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-77e22270\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-77e22270\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-77e22270\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"Hallo Welt\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5548b6b7\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Welcome.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5548b6b7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Welcome.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Welcome.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Welcome.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5548b6b7\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Welcome.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5548b6b7\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Welcome.vue\n// module id = null\n// module chunks = ","<template>\n    <div>Hallo Welt</div>\n</template>\n\n<script>\nexport default {\n    name: 'Welcome',\n};\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Welcome.vue","<template>\n    <div class=\"body\">\n        <div class=\"sub-header\">\n            <div>\n                <div class=\"row\">\n                    <div>S: {{scale1}}</div>\n                    <div>S: {{scale2}}</div>\n                    <div v-on:click=\"updateScale(1)\" class=\"btn\">+</div>\n                    <div v-on:click=\"scaleDown\" class=\"btn\">-</div>\n                </div>\n            </div>\n            <div >test</div>\n            <div v-for=\"(value, key) in labels\" :key=\"key\" v-bind:style=\"{color: {value}}\">\n                {{ key }}: {{ value }}\n            </div>\n            <div v-on:click=\"sendData\" class=\"btn\">Update Data</div>\n        </div>\n        <div class=\"row\">\n            <canvas  ref=\"canvas\" id=\"canvas\" ></canvas>\n            <div class=\"details\">\n                <div class=\"info-box\">\n                    <div>N: {{selectedNode}}</div>\n                    <div>Neighbs #: {{selectedNodeNeighboursCount}}</div>\n                    <div>x: {{selectedNodeX}}</div>\n                    <div>y: {{selectedNodeY}}</div>\n                    <div>ImgScale: {{imageScale}}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport io from 'socket.io-client';\n// import logo from '../assets/logo.png';\n\n/* eslint no-underscore-dangle: [\"error\", { \"allowAfterThis\": true }] */\nclass Node {\n    constructor(data, triggerDraw) {\n        this.name = data.name;\n        this.links = data.links;\n        this.index = data.index;\n        this.x = data.x;\n        this.y = data.y;\n        this.width = 40;\n        this.height = 40;\n        this.colorKey = data.colorKey;\n        this.color = data.color;\n\n        this.label = data.label\n        // x,y for reseting\n        this.initX = data.x;\n        this.initY = data.y;\n\n        // callback for drawing everything\n        this.triggerDraw = triggerDraw;\n\n        this.imageScale = 5; // showing images bigger\n        // this.scale = 1;\n        this.icon = new Image();\n        this.icon.src = `data:image/jpeg;base64,${data.buffer}`;\n\n        this._isActive = false; // handle clicked node\n        this.isActiveNeighbour = false; // is this a neighbour of a active node?\n        this.hasImage = false; // is there detailed image?\n\n        this.image = new Image();\n        // this.image.src = `data:image/jpeg;base64,${data.buffer}`;\n\n        this.scale = null; // will be updated through this.draw()\n        //\n        this.timerId = 0;\n\n        this._value = null; // value will be set by the active nodes neighbour-values, default is 5\n    }\n\n    get width() {\n        if (this.isActive) return this._width + (this._width * this.imageScale);\n        if (this.isActiveNeighbour) return this._width + (this._width * this.imageScale * this.value);\n        return this._width;\n    }\n\n    set width(value) {\n        this._width = value;\n    }\n\n    get height() {\n        if (this.isActive) return this._height + (this._height * this.imageScale);\n        if (this.isActiveNeighbour) return this._height + (this._height * this.imageScale * this.value);\n        return this._height;\n    }\n\n    set height(value) {\n        this._height = value;\n    }\n\n    get value() {\n        return this._value;\n    }\n\n    set value(v) {\n        if (v < 0.1) this._value = 0.1;\n        else if (v > 1) this._value = 1;\n        else this._value = v;\n    }\n\n    get isActive() {\n        return this._isActive;\n    }\n\n    set isActive(v) {\n        this._isActive = v;\n\n        /* if(this.timerId) clearInterval(this.timerId);\n        this._isActive = v;\n        if (v === true) {\n            this._isActive = v;\n            this.timerId = setInterval(() => {\n                console.log(this.imageScale)\n                this.imageScale += 0.1;\n                ;\n                if (this.imageScale >= 5) {\n                    clearInterval(this.timerId);\n                    this.imageScale = 5\n                }\n                this.triggerDraw()\n            }, 100);\n        } else if(v === false) {\n            this.timerId = setInterval(() => {\n                this.imageScale -= 0.1;\n                this.triggerDraw();\n\n                if (this.imageScale <= 1) {\n                    this._isActive = v;\n                    clearInterval(this.timerId);\n                    this.imageScale = 1\n                }\n                this.triggerDraw();\n            }, 100);\n        } */\n    }\n\n    // if isActive\n    // scale x to real/current 2d-coords\n    // subtract half width for moving left, width scaled with ImageScale\n    // scale back to Node x/y\n    // TODO the last point is because of the context is scaling it again - maybe we could get rid of this?\n\n    get x() {\n        return this._x - (this.width / 2 / this.scale);\n        // return this._x;\n    }\n\n    set x(value) {\n        this._x = value;\n    }\n\n    get y() {\n        return this._y - (this.height / 2 / this.scale);\n        // return this._y;\n    }\n\n    set y(value) {\n        this._y = value;\n    }\n\n    // simple changing the x/y is not possible because\n    // they have special getters witch would be use while setting/+= values\n    move(x, y) {\n        this._x += x;\n        this._y += y;\n    }\n\n\n    // ctx is the canvas context\n    // scale change through zooming and is used for positioning the images\n    draw(ctx, hitCtx, scale) {\n        // console.log('start draw Image');\n        // check which picture to use\n        this.scale = scale;\n        // eif(thi) socket.emit('requestImage', node.name);\n        const imgData = (this.isActive || this.isActiveNeighbour) && this.hasImage ? this.image : this.icon;\n\n        const x = this.x;\n        const y = this.y;\n        const w = this.width / scale;\n        const h = this.height / scale;\n\n\n        if (this.isActive) {\n            // console.log(`Active node while draw: ${this.name}}`);\n            // console.log(this);\n            ctx.globalAlpha = 1;\n            ctx.drawImage(imgData, x, y, w, h);\n            ctx.globalAlpha = 0.3;\n            // ctx.rect(this.x,this.y, this.width/scale,this.height/scale);\n            // ctx.stroke();\n        } else if (this.isActiveNeighbour) {\n            // console.log(`Neighbour node while draw: ${this.name}}`);\n            // console.log(this);\n            ctx.globalAlpha = 1;\n            ctx.drawImage(imgData, x, y, w, h);\n            ctx.globalAlpha = 0.3;\n        } else {\n            // console.log('draw image');\n            // console.log(this);\n            ctx.drawImage(imgData, x, y, w, h);\n        }\n\n        // draw HitCanvas rect\n        hitCtx.fillStyle = this.colorKey;\n        hitCtx.fillRect(x, y, w, h);\n    }\n\n    drawBorder(ctx, hitCtx, scale) {\n        const x = this.x;\n        const y = this.y;\n        const w = this.width / scale;\n        const h = this.height / scale;\n\n        ctx.strokeStyle= this.color\n        ctx.lineWidth = 0.1\n        ctx.strokeRect(x, y, w, h);\n    }\n\n\n    // unused cause of non-math method for findNodeUnderMouse\n    /*contains(x, y, scale) {\n        // All we have to do is make sure the Mouse X,Y fall in the area between\n        // the Node X and (X + Width) and its Y and (Y + Height)\n        const w = this.width / scale;\n        const h = this.height / scale;\n\n        // const contains = (x >= this.x) && (x <= this.x + w) && (y >= this.y) && (y <= this.y + h);\n        return (x >= this.x) && (x <= this.x + w) && (y >= this.y) && (y <= this.y + h);\n        // console.log(contains);\n        // console.log(this);\n        // console.log({ mx, my, x, y, w, h });\n\n\n        // return contains;\n    }*/\n}\n\n\nclass CanvasState {\n    constructor(canvas, hitCanvas, socket) {\n        this.socket = socket;\n\n        this.canvas = canvas;\n        this.hitCanvas = hitCanvas;\n        this.width = canvas.width;\n        this.height = canvas.height;\n        this.ctx = canvas.getContext('2d');\n        this.hitCtx = hitCanvas.getContext('2d');\n\n        // **** Keep track of state! ****\n\n        this.valid = false; // when set to false, the canvas will redraw everything\n        this.nodes = {}; // hash for all nodes\n        this.colorHash = {}; // find nodes by color\n        this.dragging = false; // Keep track of when we are dragging\n        this.draggNode = false; // save the node for dragging\n\n        // the current selected object. TODO  In the future we could turn this into an array for multiple selection\n        this.selection = null;\n\n        this.activeModus = false; // freeze for handling selection\n        this.activeNode = false; // node while freeze\n\n        this.scale = 30;\n        this.interval = 100;\n\n        this.offsetLeft = canvas.getBoundingClientRect().left;\n        this.offsetTop = canvas.getBoundingClientRect().top;\n\n        this.translateX = this.width / 2;\n        this.translateY = this.height / 2;\n\n        this.startX = null;\n        this.startY = null;\n        // this.ctx.translate(this.translateX / 2, this.translateY / 2);\n        // this.ctx.scale(this.scale, this.scale);\n\n\n        // add event listener\n        this.canvas.onmousedown = this.handleMouseDown;\n        this.canvas.onmousemove = this.handleMouseMove;\n        this.canvas.onmouseup = this.handleMouseUp;\n        // this.canvas.onlclick = this.handleClick;\n        this.canvas.ondblclick = this.handleDoubleClick;\n        this.canvas.onwheel = this.zoom;\n\n        setInterval(() => this.draw(), this.interval);\n    }\n\n    getScale = () => {\n        return this.scale\n    }\n\n    triggerDraw() {\n        console.log('triggerDraw');\n        this.valid = false;\n    }\n\n\n    addNode = (node) => {\n        console.log('Node addded');\n        this.nodes[node.index] = node;\n        this.colorHash[node.colorKey] = node.index;\n        this.valid = false; // for redrawing\n    }\n\n    getNodes() {\n        return this.nodes;\n    }\n\n    // used by nodes who are active/activeNeighbours to get actuall scale\n    getScale = () => {\n        return this.scale;\n    }\n\n    resetStore() {\n        this.nodes = {};\n        this.colorHash = {};\n        this.valid = false;\n    }\n\n    clear() {\n        // move point 0,0 to middle of canvas\n        this.ctx.resetTransform();\n        this.hitCtx.resetTransform();\n\n        // this.ctx.clearRect(-this.width / 2, -this.height / 2, this.width, this.height);\n        this.ctx.clearRect(0, 0, this.width, this.height);\n        this.hitCtx.clearRect(0, 0, this.width, this.height);\n        this.ctx.translate(this.translateX, this.translateY);\n        this.hitCtx.translate(this.translateX, this.translateY);\n        this.ctx.scale(this.scale, this.scale);\n        this.hitCtx.scale(this.scale, this.scale);\n    }\n\n    draw = () => {\n        // if our state is invalid, redraw and validate!\n        if (!this.valid) {\n            console.log('reDraw started');\n            const ctx = this.ctx;\n            // const nodes = this.nodes;\n            this.clear();\n\n            // ** Add stuff you want drawn in the background all the time here **\n\n\n            if (this.selection) ctx.globalAlpha = 0.3;\n            else ctx.globalAlpha = 1;\n\n            Object.values(this.nodes).map(node => node.draw(ctx, this.hitCtx, this.scale));\n            Object.values(this.nodes).map(node => node.drawBorder(ctx, this.hitCtx, this.scale));\n            /*\n            if (this.activeModus) {\n                ctx.globalAlpha = 0.1;\n                Object.values(this.nodes).map((node) => {\n                    // TODO skip the drawing of elements that have moved off the screen:\n                    if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 1;\n                    node.draw(ctx, this.scale);\n                    if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 0.1;\n                });\n            } else {\n                ctx.globalAlpha = 1;\n\n            }\n\n            // enlarge coordinates\n            // draw all nodes\n            Object.values(this.nodes).map((node) => {\n                // We can skip the drawing of elements that have moved off the screen:\n                // TODO handle elements offside the screen\n\n                if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 1;\n                node.draw(ctx, this.scale);\n                if (node.isActive || node.isActiveNeighbour) ctx.globalAlpha = 1;\n            });\n*/\n            // ** Add stuff you want drawn on top all the time here **\n\n\n            this.valid = true;\n        }\n    }\n\n    zoom = (wheelEvent) => {\n        console.log('zoom event');\n        wheelEvent.preventDefault();\n        wheelEvent.stopPropagation();\n        // console.log(wheelEvent)\n\n        if (!this.selection) {\n            // Zoom in = increase = wheel up = negativ delta Y\n            if (wheelEvent.deltaY < 0) {\n                console.log('zoom in');\n                // this.ctx.scale(2, 2); // TODO is this needed??\n                this.scale += 1;\n            }\n\n            // Zoom out = decrease = wheel down = positiv delta Y\n            if (wheelEvent.deltaY > 0) {\n                console.log('zoom out');\n                // this.ctx.scale(0.5, 0.5);\n                this.scale = this.scale - 1;\n            }\n            this.valid = false;\n        } else {\n            const nodeUnderMouse = this.findNodeByMousePosition(wheelEvent.offsetX, wheelEvent.offsetY);\n            if (nodeUnderMouse && nodeUnderMouse.isActiveNeighbour) {\n                console.log('nodeUnderMouse');\n                console.log(nodeUnderMouse.name);\n\n                if (wheelEvent.deltaY < 0) {\n                    console.log('zoom in - image smaller');\n                    nodeUnderMouse.value -= 0.1;\n                }\n\n                // Zoom out = decrease = wheel down = positiv delta Y\n                if (wheelEvent.deltaY > 0) {\n                    console.log('zoom out - image bigger');\n                    nodeUnderMouse.value += 0.1;\n                }\n\n                this.valid = false;\n            } else {\n                // no node under mouse oder the node is not a active neighbour\n                // Todo add different handling of this\n                console.log('no node under mouse oder the node is not a active neighbour');\n            }\n        }\n\n        // console.log(this.scale);\n        // this.ctx.scale(this.scale, this.scale);\n        return false;\n    }\n\n    findNodeByMousePosition(x, y) {\n        // old math way\n        /* // find 'first' node under click\n        // slice makes copy of array\n        // translate X/Y to node x/y\n        const nodeX = (x - this.translateX) / this.scale;\n        const nodeY = (y - this.translateY) / this.scale;\n        return Object.values(this.nodes).slice(0).reverse().find(\n            node => node.contains(nodeX, nodeY, this.scale),\n        ); */\n        const pixel = this.hitCtx.getImageData(x, y, 1, 1).data;\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\n        const nodeId = this.colorHash[color];\n        if (nodeId) {\n            return this.nodes[nodeId];\n        } return null;\n    }\n\n    selectNode(node) {\n        this.updateUI(this.scale)\n        // delete old node\n        if (this.selection && this.selection !== node) this.removeSelection();\n        this.selection = node;\n        console.log('selected Node');\n        console.log(this.selection);\n\n        // const activeNode = this.selection;\n        // mark node as active\n        this.selection.isActive = true;\n\n        // load detail image\n        /* if (!node.hasImage) {\n            console.log('request image');\n            socket.emit('requestImage', node.name);\n        } */\n\n        // mark neighbours\n        Object.entries(node.links).forEach(([index, strength]) => {\n            // console.log(n.target);\n            const neighbour = this.nodes[index];\n\n            if (neighbour) {\n                // mark as neighbour of a active note\n                neighbour.isActiveNeighbour = true;\n                // set value from links to nodes\n                neighbour.value = strength;\n                // load neighbours detailed image\n                // if (!this.nodes[n.target].hasImage) socket.emit('requestImage', { name: this.nodes[n.target].name, index: this.nodes[n.target].index });\n\n                // console.error(`FOUND Neighbours ID: ${n.target} Name: ${this.nodes[n.target].name} Value: ${n.value} isActive ${this.nodes[n.target].isActiveNeighbour}`);\n            } else {\n                // TODO proper error handling - inform Katja that there is a link to a node that is not existing\n                // console.error(`Neighbours ID: ${index} is not a not found in nodes`);\n                // console.log(node)\n            }\n        });\n\n        this.triggerDraw();\n    }\n\n    removeSelection() {\n        const selectedNode = this.selection;\n\n        // mark the neighbours as not active\n        if (selectedNode) {\n            // console.log(\"remove selection\")\n            // console.log(this.selection)\n\n            // deactivated selected node\n            selectedNode.isActive = false;\n\n            // deactivated all neighbours\n            Object.keys(selectedNode.links).forEach((index) => {\n                const neighbour = this.nodes[index];\n\n                if (neighbour) {\n                    neighbour.isActiveNeighbour = false;\n                    // update (new) values in links\n                    selectedNode.links[index] = neighbour.value;\n                    // n.value = neighbour.value;\n                } else {\n                    // TODO proper error handling - inform Katja that there is a link to a node that is not existing\n                    // console.error(`Neighbours ID: ${index} is not a not found in nodes`);\n                }\n            });\n        }\n        // remove selection\n        this.selection = null;\n        this.valid = false; // redraw\n    }\n\n    handleMouseDown = (e) => {\n        // tell the browser we're handling this mouse event\n        e.preventDefault();\n        e.stopPropagation();\n        // console.log(e)\n\n        console.log(this.hitCanvas.width);\n        console.log(this.hitCtx.width);\n        console.log(this.canvas.width);\n        console.log(this.ctx.width);\n        const shiftKeyPressed = e.shiftKey;\n\n        const nodeUnderMouse = this.findNodeByMousePosition(e.offsetX, e.offsetY);\n\n        // TODO test if mouse hits Image and set their drag flag\n\n        console.log('mousedown');\n        // console.log(e.offsetX);\n        // console.log(e.offsetY);\n\n        // save start position\n        this.startX = e.offsetX;\n        this.startY = e.offsetY;\n\n\n        // if there is no mouse under mouse then move everything\n        if (nodeUnderMouse) {\n            this.draggNode = nodeUnderMouse;\n            // freeze = activation Mode\n            if (this.activeModus) {\n                if (shiftKeyPressed) {\n                    // remove neighbour\n                    if (nodeUnderMouse.isActiveNeighbour) {\n                        nodeUnderMouse.isActiveNeighbour = false;\n                        // this.selection.neighbours = this.selection.neighbours.filter(item => item.target !== nodeUnderMouse.index);\n                        delete this.selection.links[nodeUnderMouse.index]; // remove link\n                        this.valid = false;\n                    }\n                    // add neighbour if node is is not active node\n                    else if (this.selection !== nodeUnderMouse) {\n                        // nodeUnderMouse.v = 5\n                        // this.selection.neighbours.push({ target: nodeUnderMouse.index, value: 0.5 });\n                        this.selection.links[nodeUnderMouse.index] = 0.5;\n                        nodeUnderMouse.isActiveNeighbour = true;\n                        nodeUnderMouse.value = 0.5;\n                        this.valid = false;\n                    }\n                }\n            }\n        } else {\n            // if nothing is clicked\n            this.dragging = true;\n        }\n    }\n\n    handleMouseMove = (e) => {\n        // other way for getting x/y\n        /* const mousePos = {\n            x: e.clientX - canvas.offsetLeft,\n            y: e.clientY - canvas.offsetTop\n        }; */\n\n        const mouseX = e.offsetX;\n        const mouseY = e.offsetY;\n\n\n        // there is a freeze and not freeze mode - different interaction based ob if a node is active or node\n        const nodeUnderMouse = this.findNodeByMousePosition(mouseX, mouseY);\n\n        if (nodeUnderMouse && !nodeUnderMouse.hasImage) this.socket.emit('requestImage', { name: nodeUnderMouse.name, index: nodeUnderMouse.index });\n\n\n        if (this.draggNode || this.dragging) {\n            // get mouse movement based on the last triggered event\n            const moveX = mouseX - this.startX; // +80 means move 80px to right\n            const moveY = mouseY - this.startY; // -50 means move 50 to top\n            // console.log({ moveX, moveY });\n\n            // save new mouse position for next event\n            this.startX = mouseX;\n            this.startY = mouseY;\n\n            if (this.dragging) {\n                this.translateX += moveX;\n                this.translateY += moveY;\n            } else if (this.draggNode) {\n                // scale the X/Y\n                const nodeX = moveX / this.scale;\n                const nodeY = moveY / this.scale;\n\n                this.draggNode.move(nodeX, nodeY);\n\n                // drag neighbours in freeze mode\n                if (this.activeModus && this.draggNode.isActive) {\n                    Object.keys(this.draggNode.links).forEach((i) => {\n                        const neighbour = this.nodes[i];\n                        // todo error handling if the neighbour is not existing for katja\n                        if (neighbour) neighbour.move(nodeX * neighbour.value, nodeY * neighbour.value);\n                    });\n                }\n            }\n            this.triggerDraw();\n        } else if (!this.activeModus) {\n            // mouse moves over empty area after being over a node\n            if (!nodeUnderMouse && this.selection) this.removeSelection();\n            // mouse over picture and no picture before\n            else if (!this.selection && nodeUnderMouse) this.selectNode(nodeUnderMouse);\n            // mouse over picture but not the is allread selected = new picture selected\n            else if (nodeUnderMouse && nodeUnderMouse !== this.selection) {\n                this.removeSelection();\n                this.selectNode(nodeUnderMouse);\n            }\n        }\n        /*\n        // move neighbours of active Node in freeze mode\n        if (this.activeModus && this.draggNode.isActive) {\n\n            // mouse is over a neighbour\n            if (this.dragging.isActive || this.dragging.isActiveNeighbour) {\n                // drag the node and al of his neighbour\n                // TODO later the 'moving weighted with values# should be toggled with a button\n\n\n                // console.log({ nodeX, nodeY });\n\n                // change the Node position\n                this.dragging.move(nodeX, nodeY);\n                // console.log(this.dragging)\n                if (this.dragging.isActive) {\n                    // change position of neighbours\n                    /!*this.dragging.neighbours.forEach((n) => {\n                        const neighbour = this.nodes[n.target];\n                        // todo their should not be a case where n.target is outside the array\n                        if (neighbour) {\n                            neighbour.move(nodeX * neighbour.value, nodeY * neighbour.value);\n                        }\n                    });*!/\n\n                }\n\n                this.valid = false;\n            }\n        } else if (this.dragging === true) {\n           /!* console.log('dragging');\n            const moveX = e.offsetX - this.startX; // +80 means move 80px to right\n            const moveY = e.offsetY - this.startY; // -50 means move 50 to top\n            // console.log({ moveX, moveY });\n            this.startX = e.offsetX;\n            this.startY = e.offsetY;\n\n\n            // start drawing\n            this.valid = false;*!/\n        } else\n\n        // mouse over empty area */\n    }\n\n    handleMouseUp = () => {\n        console.log('mouseup');\n        this.dragging = false;\n        this.draggNode = false;\n    }\n\n\n    handleDoubleClick = () => {\n        console.log('Double click');\n\n        if (this.selection && !this.activeModus) {\n            this.activeModus = true;\n            this.activeNode = this.selection;\n        } else if (this.activeModus) {\n            this.activeModus = false;\n            this.activeNode = false;\n        }\n    }\n}\n\n\nexport default {\n    store: null,\n    name: 'TsneMap',\n    data: () => ({\n        exampleContent: 'This is TEXT',\n        items: [],\n        //store: null,\n        socket: null,\n        scale1: 0,\n        labels: {}\n        //scale2: 0,\n    }),\n    methods: {\n        updateCanvas: () => {\n            // const canvas = document.getElementById('canvas');\n            // const ctx = canvas.getContext('2d');\n            // ctx.clearRect(0, 0, canvas.width, canvas.height);\n            // ctx.translate(canvas.width / 2, canvas.height / 2);\n            // ctx.scale(scale, scale);\n        },\n        sendData() {\n            console.log('send data clicked');\n            const nodes = this.store.getNodes();\n            // this.store.clear()\n            this.store.resetStore();\n            this.socket.emit('updateNodes', JSON.stringify(nodes));\n        },\n        scaleDown() {\n            console.log('scaleDown clicked');\n            console.log(this.store)\n        },\n        scaleUp() {\n            console.log('scaleUp clicked');\n        },\n\n        updateScale(scale) {\n            console.log(\"UpdateScale triggerd\")\n            console.log(scale)\n            this.scale1 = scale\n        }\n\n    },\n    watch: {\n        exampleContent(val, oldVal) {\n            this.updateCanvas();\n        },\n    },\n    computed: {\n        scale2() {\n            return () => this.scale()\n        },\n        selectedNode() {\n            return this.store && this.store.selection && this.store.selection.name;\n        },\n        selectedNodeX() {\n            return this.store && this.store.selection && this.store.selection.x;\n        },\n        selectedNodeY() {\n            return this.store && this.store.selection && this.store.selection.y;\n        },\n        selectedNodeNeighboursCount() {\n            return this.store && this.store.selection && this.store.selection.links && Object.keys(this.store.selection.links).length;\n        },\n        imageScale() {\n            return this.store && this.store.selection && this.store.selection.imageScale;\n        },\n    },\n    mounted() {\n        const socket = io('http://localhost:3000');\n        const canvas = document.getElementById('canvas');\n        const parantWidth = canvas.parentNode.clientWidth * 0.8;\n        const parantHeight = 700; // canvas.parentNode.clientHeight //* 0.8\n\n        const hitCanvas = document.createElement('canvas');\n\n        canvas.width = parantWidth;\n        canvas.height = parantHeight;\n\n        hitCanvas.width = parantWidth;\n        hitCanvas.height = parantHeight;\n\n        // const ctx = canvas.getContext('2d');\n        const s = new CanvasState(canvas, hitCanvas, socket);\n\n        this.store = s;\n\n        s.updateUI = this.updateScale\n\n        this.scale = s.getScale\n\n        console.log(\"Save store\")\n        console.log(this.store)\n        this.socket = socket;\n\n        socket.on('connect', (soc) => {\n            if (!soc) {\n                console.log('no conection');\n                console.log(soc);\n            } else {\n                console.log('conected'); // das wirft immer unde\n                console.log(soc);\n            }\n            socket.emit('updateNodes', {});\n        });\n\n        socket.on('node', (data) => {\n            console.log('receive node');\n            console.log(data);\n            if (data) {\n                s.addNode(new Node(data, s.triggerDraw));\n            }\n        });\n        socket.on('receiveImage', (data) => {\n            console.log('receive image data');\n            console.log(data);\n            const node = s.nodes[data.index];\n            console.log(node);\n            node.image.src = `data:image/jpeg;base64,${data.buffer}`;\n            node.hasImage = true;\n            s.valid = false;\n        });\n\n        socket.on('updateLabels', data => {\n            console.log(\"updateLabels\")\n            console.log(data)\n            this.labels = data\n        })\n        // this.updateCanvas();\n    },\n    beforeDestroy() {\n        if (this.socket) this.socket.disconnect();\n    },\n};\n</script>\n\n<style scoped>\n\n\n    #canvas {\n        margin: 5px;\n        background-color: white;\n\n\n    }\n\n    .btn {\n        text-decoration: none;\n        margin: 10px;\n        height: 20px;\n        line-height: 20px;\n        padding: 0 14px;\n        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);\n        background: #fff;\n        color: #6772e5;\n        border-radius: 4px;\n        font-size: 15px;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: .025em;\n        transition: all .15s ease;\n        cursor: pointer;\n    }\n\n    .btn:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08);\n    }\n\n    .sub-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .body {\n        width: 100%;\n        height: 100%;\n        background-color: rgba(44, 62, 80, 0.5);\n        //color: black;\n    }\n\n    .details {\n        width: 100%;\n        height: 100%;\n        margin: 5px;\n        background-color: white;\n    }\n\n    .row {\n        display: flex;\n\n    }\n\n    .info {\n        padding: 0 0.5rem;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/TsneMap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"body\"},[_c('div',{staticClass:\"sub-header\"},[_c('div',[_c('div',{staticClass:\"row\"},[_c('div',[_vm._v(\"S: \"+_vm._s(_vm.scale1))]),_vm._v(\" \"),_c('div',[_vm._v(\"S: \"+_vm._s(_vm.scale2))]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":function($event){_vm.updateScale(1)}}},[_vm._v(\"+\")]),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":_vm.scaleDown}},[_vm._v(\"-\")])])]),_vm._v(\" \"),_c('div',[_vm._v(\"test\")]),_vm._v(\" \"),_vm._l((_vm.labels),function(value,key){return _c('div',{key:key,style:({color: {value: value}})},[_vm._v(\"\\n            \"+_vm._s(key)+\": \"+_vm._s(value)+\"\\n        \")])}),_vm._v(\" \"),_c('div',{staticClass:\"btn\",on:{\"click\":_vm.sendData}},[_vm._v(\"Update Data\")])],2),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('canvas',{ref:\"canvas\",attrs:{\"id\":\"canvas\"}}),_vm._v(\" \"),_c('div',{staticClass:\"details\"},[_c('div',{staticClass:\"info-box\"},[_c('div',[_vm._v(\"N: \"+_vm._s(_vm.selectedNode))]),_vm._v(\" \"),_c('div',[_vm._v(\"Neighbs #: \"+_vm._s(_vm.selectedNodeNeighboursCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"x: \"+_vm._s(_vm.selectedNodeX))]),_vm._v(\" \"),_c('div',[_vm._v(\"y: \"+_vm._s(_vm.selectedNodeY))]),_vm._v(\" \"),_c('div',[_vm._v(\"ImgScale: \"+_vm._s(_vm.imageScale))])])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-24275638\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/TsneMap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-24275638\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TsneMap.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./TsneMap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./TsneMap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-24275638\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./TsneMap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-24275638\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/TsneMap.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <p>Name: {{ coin.name }}</p>\n    <p>Symbol: {{ coin.symbol }}</p>\n    <p>Price (USD): {{ coin.price_usd }}</p>\n  </div>\n</template>\n<script>\n\n\nexport default {\n    name: 'Coins',\n\n    data() {\n        return {\n            coin: {},\n        };\n    },\n\n    created() {\n        this.fetchData();\n    },\n\n    watch: {\n        $route: 'fetchData',\n    },\n\n    methods: {\n        fetchData() {\n            fetch(`https://api.coinmarketcap.com/v1/ticker/${this.$route.params.id}/`)\n                .then((resp) => {\n                    this.coin = resp.data[0];\n                    console.log(resp);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        },\n    },\n};\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Coins.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\"Name: \"+_vm._s(_vm.coin.name))]),_vm._v(\" \"),_c('p',[_vm._v(\"Symbol: \"+_vm._s(_vm.coin.symbol))]),_vm._v(\" \"),_c('p',[_vm._v(\"Price (USD): \"+_vm._s(_vm.coin.price_usd))])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7c7c2eff\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Coins.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7c7c2eff\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Coins.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Coins.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Coins.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7c7c2eff\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Coins.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7c7c2eff\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Coins.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nimport Router from 'vue-router';\nimport Welcome from '@/components/Welcome';\nimport TsneMap from '@/components/TsneMap';\nimport Coins from '@/components/Coins';\n\nVue.use(Router);\n\nexport default new Router({\n    routes: [\n        {\n            path: '/',\n            name: 'Welcome',\n            component: Welcome,\n        }, {\n            path: '/TsneMap',\n            name: 'TsneMap',\n            component: TsneMap,\n        }, {\n            path: '/coins/:id',\n            name: 'Coins',\n            component: Coins,\n        },\n    ],\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport App from './App';\nimport router from './router';\nimport './index.css';\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n    el: '#app',\n    router,\n    components: { App },\n    template: '<App/>',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}